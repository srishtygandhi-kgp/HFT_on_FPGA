-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ip_handler_check_ip_checksum is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ipDataFifo_V_dout : IN STD_LOGIC_VECTOR (72 downto 0);
    ipDataFifo_V_empty_n : IN STD_LOGIC;
    ipDataFifo_V_read : OUT STD_LOGIC;
    ipFragmentDrop_V_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    ipFragmentDrop_V_V_full_n : IN STD_LOGIC;
    ipFragmentDrop_V_V_write : OUT STD_LOGIC;
    ipValidFifoVersionNo_V_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    ipValidFifoVersionNo_V_V_full_n : IN STD_LOGIC;
    ipValidFifoVersionNo_V_V_write : OUT STD_LOGIC;
    iph_subSumsFifoOut_V_din : OUT STD_LOGIC_VECTOR (68 downto 0);
    iph_subSumsFifoOut_V_full_n : IN STD_LOGIC;
    iph_subSumsFifoOut_V_write : OUT STD_LOGIC;
    ipDataCheckFifo_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
    ipDataCheckFifo_V_full_n : IN STD_LOGIC;
    ipDataCheckFifo_V_write : OUT STD_LOGIC;
    myIpAddress_V : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of ip_handler_check_ip_checksum is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm0_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_st2_fsm1_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st0_fsm1_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_true : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm0 : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm0_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal ap_CS_fsm1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding of ap_CS_fsm1 : signal is "none";
    signal ap_sig_cseq_ST_st0_fsm1_0 : STD_LOGIC;
    signal ap_sig_bdd_34 : BOOLEAN;
    signal brmerge_fu_512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_51 : BOOLEAN;
    signal brmerge_reg_1744 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wordCount_V_load_reg_1769 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_reg_1787 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_1791 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1795 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_ipHeaderLen_V_load_reg_1773 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_cics_ipHeaderLen_V_load_reg_1773_pp0_it0 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_25_reg_1807 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wasLast_load_reg_1740 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_148 : BOOLEAN;
    signal ap_sig_cseq_ST_st2_fsm1_1 : STD_LOGIC;
    signal ap_sig_bdd_154 : BOOLEAN;
    signal cics_wasLast : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal cics_prevWord_data_V : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal cics_prevWord_keep_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal cics_wordCount_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal cics_ip_sums_V_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_ip_sums_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_ip_sums_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_ip_sums_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_ipHeaderLen_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal cics_dstIpAddress_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal reg_484 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_691_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wasLast_load_load_fu_492_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_488 : STD_LOGIC_VECTOR (1 downto 0);
    signal myIpAddress_V_read_reg_1735 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp38_reg_1748 : STD_LOGIC_VECTOR (72 downto 0);
    signal cics_wordCount_V_load_load_fu_540_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal cics_ipHeaderLen_V_load_load_fu_548_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i1_fu_585_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i1_reg_1782 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_6_fu_673_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_663_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_112_reg_1811 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cics_wordCount_V_flag_reg_272pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wordCount_V_flag_phi_fu_275_p16 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cics_wordCount_V_loc_reg_301pp0_it0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cics_wordCount_V_loc_phi_fu_304_p16 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_phiprechg_tmp_26_reg_326pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_phi_fu_329_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cics_wordCount_V_flag_1_reg_336pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal currWord_last_V_fu_532_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wordCount_V_flag_1_phi_fu_339_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cics_wordCount_V_new_1_reg_348pp0_it0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cics_wordCount_V_new_1_phi_fu_351_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_2_fu_1414_p6 : STD_LOGIC_VECTOR (68 downto 0);
    signal tmp_1_6_fu_1482_p6 : STD_LOGIC_VECTOR (68 downto 0);
    signal tmp_3_3_fu_1701_p6 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_4_fu_1724_p4 : STD_LOGIC_VECTOR (72 downto 0);
    signal currWord_data_V_fu_518_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_36_fu_805_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_98_fu_999_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum0_V_1_fu_1248_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum0_V_fu_1466_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_fu_1534_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_fu_851_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_102_fu_1045_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum1_V_1_fu_1298_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_59_fu_1580_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_fu_897_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_106_fu_1083_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum2_V_1_fu_1348_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_63_fu_1626_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_48_fu_943_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_110_fu_1129_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_93_fu_1175_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum3_V_1_fu_1398_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_67_fu_1672_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_369_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_fu_653_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_567_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_not_fu_506_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_not_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_5_fu_557_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_595_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_4_fu_605_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_2_fu_627_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_9_fu_643_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_49_fu_669_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_768_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_404_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i2_fu_771_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal extLd_fu_740_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_fu_779_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_fu_783_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_28_fu_789_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_801_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_31_fu_797_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_422_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_413_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i3_fu_817_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum1_V_fu_748_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_1_fu_825_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_41_1_fu_829_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_37_fu_835_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_847_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_843_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_440_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_431_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i4_fu_863_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum2_V_fu_756_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_2_fu_871_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_41_2_fu_875_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_41_fu_881_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_893_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_fu_889_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_458_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_449_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i5_fu_909_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum3_V_fu_764_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_3_fu_917_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_41_3_fu_921_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_45_fu_927_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_939_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_fu_935_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_94_fu_962_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i14_fu_965_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_21_fu_973_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_22_fu_977_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_95_fu_983_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_fu_995_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_96_fu_991_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i15_fu_1011_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_1_fu_1019_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_61_1_fu_1023_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_99_fu_1029_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_1041_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_100_fu_1037_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_V_fu_955_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_2_fu_1057_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_61_2_fu_1061_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_103_fu_1067_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_105_fu_1079_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_104_fu_1075_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i16_fu_1095_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_3_fu_1103_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_61_3_fu_1107_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_107_fu_1113_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_fu_1125_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_108_fu_1121_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_fu_1141_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_1149_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_20_fu_1153_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_90_fu_1159_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_fu_1171_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_91_fu_1167_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_73_fu_1211_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i10_fu_1214_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_15_fu_1222_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_16_fu_1226_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_74_fu_1232_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_1244_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_75_fu_1240_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i11_fu_1264_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_1_fu_1272_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_54_1_fu_1276_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_78_fu_1282_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_1294_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_79_fu_1290_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i12_fu_1314_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_2_fu_1322_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_54_2_fu_1326_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_82_fu_1332_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_1344_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_83_fu_1340_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i13_fu_1364_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_3_fu_1372_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_54_3_fu_1376_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_86_fu_1382_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_88_fu_1394_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_87_fu_1390_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_sum3_V_1_cast_fu_1404_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_sum2_V_1_cast_fu_1354_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_sum1_V_1_cast_fu_1304_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_sum0_V_1_cast_fu_1254_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_68_fu_1429_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i1_fu_1432_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_1440_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_fu_1444_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_69_fu_1450_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_1462_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_70_fu_1458_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sum0_V_cast_fu_1472_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_51_fu_1497_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i6_fu_1500_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_1508_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_3_fu_1512_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_52_fu_1518_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1530_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_fu_1526_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i7_fu_1546_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_1_fu_1554_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_48_1_fu_1558_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_56_fu_1564_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_1576_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_fu_1572_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i8_fu_1592_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_2_fu_1600_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_48_2_fu_1604_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_60_fu_1610_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1622_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_61_fu_1618_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i9_fu_1638_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_3_fu_1646_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_48_3_fu_1650_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_64_fu_1656_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_1668_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_65_fu_1664_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_last_V_fu_1696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_10_fu_1687_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_111_fu_1684_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Result_12_fu_1720_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_11_fu_1716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_bdd_261 : BOOLEAN;
    signal ap_sig_bdd_344 : BOOLEAN;
    signal ap_sig_bdd_161 : BOOLEAN;
    signal ap_sig_bdd_1170 : BOOLEAN;
    signal ap_sig_bdd_217 : BOOLEAN;
    signal ap_sig_bdd_1177 : BOOLEAN;
    signal ap_sig_bdd_1179 : BOOLEAN;
    signal ap_sig_bdd_1183 : BOOLEAN;
    signal ap_sig_bdd_1173 : BOOLEAN;
    signal ap_sig_bdd_325 : BOOLEAN;
    signal ap_sig_bdd_202 : BOOLEAN;
    signal ap_sig_bdd_380 : BOOLEAN;
    signal ap_sig_bdd_133 : BOOLEAN;
    signal ap_sig_bdd_140 : BOOLEAN;
    signal ap_sig_bdd_338 : BOOLEAN;
    signal ap_sig_bdd_74 : BOOLEAN;
    signal ap_sig_bdd_79 : BOOLEAN;
    signal ap_sig_bdd_417 : BOOLEAN;
    signal ap_sig_bdd_1196 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm0) of the state machine. --
    ap_CS_fsm0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
            else
                ap_CS_fsm0 <= ap_NS_fsm0;
            end if;
        end if;
    end process;


    -- the current state (ap_CS_fsm1) of the state machine. --
    ap_CS_fsm1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
            else
                ap_CS_fsm1 <= ap_NS_fsm1;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it1 assign process. --
    ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_161) then
                if (ap_sig_bdd_344) then 
                    ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it1 <= cics_dstIpAddress_V;
                elsif (ap_sig_bdd_261) then 
                    ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it1 <= p_Result_6_fu_673_p5;
                elsif ((ap_true = ap_true)) then 
                    ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it1 <= ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it0;
                end if;
            end if; 
        end if;
    end process;

    -- cics_dstIpAddress_V assign process. --
    cics_dstIpAddress_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_217) then
                if (ap_sig_bdd_1170) then 
                    cics_dstIpAddress_V <= p_Result_6_fu_673_p5;
                elsif ((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) then 
                    cics_dstIpAddress_V <= p_Result_s_fu_567_p5;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ipHeaderLen_V assign process. --
    cics_ipHeaderLen_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and (ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_548_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and (ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_548_p1)))) then 
                cics_ipHeaderLen_V <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1))) then 
                cics_ipHeaderLen_V <= p_2_fu_653_p1;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_548_p1)) and not((ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_548_p1)) and not((ap_const_lv8_0 = cics_ipHeaderLen_V_load_load_fu_548_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)))) then 
                cics_ipHeaderLen_V <= grp_fu_369_p2;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_0 assign process. --
    cics_ip_sums_V_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_1173) then
                if (ap_sig_bdd_1183) then 
                    cics_ip_sums_V_0 <= tmp_55_fu_1534_p2;
                elsif (ap_sig_bdd_1179) then 
                    cics_ip_sums_V_0 <= tmp_sum0_V_fu_1466_p2;
                elsif (ap_sig_bdd_1177) then 
                    cics_ip_sums_V_0 <= tmp_sum0_V_1_fu_1248_p2;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) then 
                    cics_ip_sums_V_0 <= ap_const_lv16_0;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) then 
                    cics_ip_sums_V_0 <= tmp_98_fu_999_p2;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) then 
                    cics_ip_sums_V_0 <= tmp_36_fu_805_p2;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_1 assign process. --
    cics_ip_sums_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_1173) then
                if (ap_sig_bdd_1183) then 
                    cics_ip_sums_V_1 <= tmp_59_fu_1580_p2;
                elsif (ap_sig_bdd_1177) then 
                    cics_ip_sums_V_1 <= tmp_sum1_V_1_fu_1298_p2;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) then 
                    cics_ip_sums_V_1 <= ap_const_lv16_0;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) then 
                    cics_ip_sums_V_1 <= tmp_102_fu_1045_p2;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) then 
                    cics_ip_sums_V_1 <= tmp_40_fu_851_p2;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_2 assign process. --
    cics_ip_sums_V_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_1173) then
                if (ap_sig_bdd_1183) then 
                    cics_ip_sums_V_2 <= tmp_63_fu_1626_p2;
                elsif (ap_sig_bdd_1177) then 
                    cics_ip_sums_V_2 <= tmp_sum2_V_1_fu_1348_p2;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) then 
                    cics_ip_sums_V_2 <= ap_const_lv16_0;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) then 
                    cics_ip_sums_V_2 <= tmp_106_fu_1083_p2;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) then 
                    cics_ip_sums_V_2 <= tmp_44_fu_897_p2;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_3 assign process. --
    cics_ip_sums_V_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_1173) then
                if (ap_sig_bdd_1183) then 
                    cics_ip_sums_V_3 <= tmp_67_fu_1672_p2;
                elsif (ap_sig_bdd_1177) then 
                    cics_ip_sums_V_3 <= tmp_sum3_V_1_fu_1398_p2;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) then 
                    cics_ip_sums_V_3 <= ap_const_lv16_0;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_1)) then 
                    cics_ip_sums_V_3 <= tmp_93_fu_1175_p2;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) then 
                    cics_ip_sums_V_3 <= tmp_110_fu_1129_p2;
                elsif ((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) then 
                    cics_ip_sums_V_3 <= tmp_48_fu_943_p2;
                end if;
            end if; 
        end if;
    end process;

    -- cics_wasLast assign process. --
    cics_wasLast_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_161) then
                if (ap_sig_bdd_202) then 
                    cics_wasLast <= ap_const_lv1_0;
                elsif (ap_sig_bdd_325) then 
                    cics_wasLast <= tmp_26_phi_fu_329_p4;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                brmerge_reg_1744 <= brmerge_fu_512_p2;
                cics_wasLast_load_reg_1740 <= cics_wasLast;
                myIpAddress_V_read_reg_1735 <= myIpAddress_V;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                cics_ipHeaderLen_V_load_reg_1773 <= cics_ipHeaderLen_V;
                cics_prevWord_data_V <= currWord_data_V_fu_518_p1;
                cics_prevWord_keep_V <= ipDataFifo_V_dout(71 downto 64);
                cics_wordCount_V_load_reg_1769 <= cics_wordCount_V;
                tmp38_reg_1748 <= ipDataFifo_V_dout;
                tmp_25_reg_1807 <= tmp_25_fu_691_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = cics_wordCount_V_flag_1_phi_fu_339_p4)))) then
                cics_wordCount_V <= cics_wordCount_V_new_1_phi_fu_351_p4;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1))) then
                p_Result_i1_reg_1782 <= ipDataFifo_V_dout(47 downto 40);
                tmp_6_reg_1787 <= tmp_6_fu_613_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = tmp_25_fu_691_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((brmerge_fu_512_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = cics_wasLast_load_load_fu_492_p1))))) then
                reg_484 <= cics_prevWord_data_V(63 downto 48);
                reg_488 <= cics_prevWord_keep_V(7 downto 6);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = tmp_25_fu_691_p2)))) then
                tmp_112_reg_1811 <= ipDataFifo_V_dout(70 downto 70);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1) and not((ap_const_lv1_0 = tmp_6_fu_613_p2)))) then
                tmp_50_reg_1791 <= ipDataFifo_V_dout(37 downto 37);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1))) then
                tmp_5_reg_1795 <= tmp_5_fu_637_p2;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm1) of the state machine. --
    ap_NS_fsm1_assign_proc : process (ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_CS_fsm1, ap_sig_bdd_51, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm1 is
            when ap_ST_st2_fsm1_1 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148)) and not(ap_sig_bdd_51))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148)) and (not((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and ap_sig_bdd_51)))) then
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                else
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                end if;
            when ap_ST_st0_fsm1_0 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                else
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                end if;
            when others =>  
                ap_NS_fsm1 <= "XX";
        end case;
    end process;

    -- the next state (ap_NS_fsm0) of the state machine. --
    ap_NS_fsm0_assign_proc : process (ap_done_reg, ap_CS_fsm0, ap_sig_bdd_51, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm0 is
            when ap_ST_st1_fsm0_0 => 
                ap_NS_fsm0 <= ap_ST_st1_fsm0_0;
            when others =>  
                ap_NS_fsm0 <= "X";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_cseq_ST_st0_fsm1_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st0_fsm1_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_51, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_reg_phiprechg_cics_wordCount_V_flag_1_reg_336pp0_it0 <= "X";
    ap_reg_phiprechg_cics_wordCount_V_flag_reg_272pp0_it0 <= "X";
    ap_reg_phiprechg_cics_wordCount_V_loc_reg_301pp0_it0 <= "XXX";
    ap_reg_phiprechg_cics_wordCount_V_new_1_reg_348pp0_it0 <= "XXX";
    ap_reg_phiprechg_tmp_26_reg_326pp0_it0 <= "X";
    ap_reg_ppstg_cics_ipHeaderLen_V_load_reg_1773_pp0_it0 <= cics_ipHeaderLen_V_load_reg_1773;

    -- ap_sig_bdd_1170 assign process. --
    ap_sig_bdd_1170_assign_proc : process(cics_wordCount_V_load_load_fu_540_p1, tmp_s_fu_663_p2)
    begin
                ap_sig_bdd_1170 <= (not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv1_0 = tmp_s_fu_663_p2)));
    end process;


    -- ap_sig_bdd_1173 assign process. --
    ap_sig_bdd_1173_assign_proc : process(ap_done_reg, brmerge_reg_1744, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_1173 <= ((ap_const_lv1_0 = brmerge_reg_1744) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148)));
    end process;


    -- ap_sig_bdd_1177 assign process. --
    ap_sig_bdd_1177_assign_proc : process(cics_wordCount_V_load_reg_1769, cics_ipHeaderLen_V_load_reg_1773)
    begin
                ap_sig_bdd_1177 <= (not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1773 = ap_const_lv8_2));
    end process;


    -- ap_sig_bdd_1179 assign process. --
    ap_sig_bdd_1179_assign_proc : process(cics_wordCount_V_load_reg_1769, cics_ipHeaderLen_V_load_reg_1773)
    begin
                ap_sig_bdd_1179 <= (not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1773 = ap_const_lv8_1));
    end process;


    -- ap_sig_bdd_1183 assign process. --
    ap_sig_bdd_1183_assign_proc : process(cics_wordCount_V_load_reg_1769, cics_ipHeaderLen_V_load_reg_1773, ap_reg_ppstg_cics_ipHeaderLen_V_load_reg_1773_pp0_it0)
    begin
                ap_sig_bdd_1183 <= (not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) and not((cics_ipHeaderLen_V_load_reg_1773 = ap_const_lv8_2)) and not((cics_ipHeaderLen_V_load_reg_1773 = ap_const_lv8_1)) and not((ap_reg_ppstg_cics_ipHeaderLen_V_load_reg_1773_pp0_it0 = ap_const_lv8_0)));
    end process;


    -- ap_sig_bdd_1196 assign process. --
    ap_sig_bdd_1196_assign_proc : process(ap_done_reg, brmerge_reg_1744, cics_wordCount_V_load_reg_1769, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_1196 <= ((ap_const_lv1_0 = brmerge_reg_1744) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148)));
    end process;


    -- ap_sig_bdd_133 assign process. --
    ap_sig_bdd_133_assign_proc : process(brmerge_reg_1744, tmp_25_reg_1807)
    begin
                ap_sig_bdd_133 <= ((ap_const_lv1_0 = brmerge_reg_1744) and not((ap_const_lv1_0 = tmp_25_reg_1807)));
    end process;


    -- ap_sig_bdd_140 assign process. --
    ap_sig_bdd_140_assign_proc : process(brmerge_reg_1744, cics_wasLast_load_reg_1740)
    begin
                ap_sig_bdd_140 <= (not((ap_const_lv1_0 = brmerge_reg_1744)) and not((ap_const_lv1_0 = cics_wasLast_load_reg_1740)));
    end process;


    -- ap_sig_bdd_148 assign process. --
    ap_sig_bdd_148_assign_proc : process(ipFragmentDrop_V_V_full_n, brmerge_reg_1744, cics_wordCount_V_load_reg_1769, tmp_6_reg_1787, tmp_50_reg_1791, ipValidFifoVersionNo_V_V_full_n, tmp_5_reg_1795, iph_subSumsFifoOut_V_full_n, cics_ipHeaderLen_V_load_reg_1773, ipDataCheckFifo_V_full_n, tmp_25_reg_1807, cics_wasLast_load_reg_1740)
    begin
                ap_sig_bdd_148 <= (((ipFragmentDrop_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_2) and not((ap_const_lv1_0 = tmp_6_reg_1787)) and (ap_const_lv1_0 = tmp_50_reg_1791)) or ((ipFragmentDrop_V_V_full_n = ap_const_logic_0) and (((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_2) and (ap_const_lv1_0 = tmp_6_reg_1787)) or ((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_2) and not((ap_const_lv1_0 = tmp_50_reg_1791))))) or ((ap_const_lv1_0 = brmerge_reg_1744) and (ipValidFifoVersionNo_V_V_full_n = ap_const_logic_0) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_1) and (ap_const_lv1_0 = tmp_5_reg_1795)) or ((ap_const_lv1_0 = brmerge_reg_1744) and (ipValidFifoVersionNo_V_V_full_n = ap_const_logic_0) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_1) and not((ap_const_lv1_0 = tmp_5_reg_1795))) or ((ap_const_lv1_0 = brmerge_reg_1744) and (iph_subSumsFifoOut_V_full_n = ap_const_logic_0) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1773 = ap_const_lv8_2)) or ((ap_const_lv1_0 = brmerge_reg_1744) and (iph_subSumsFifoOut_V_full_n = ap_const_logic_0) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1773 = ap_const_lv8_1)) or ((ap_const_lv1_0 = brmerge_reg_1744) and (ipDataCheckFifo_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_25_reg_1807))) or ((ipDataCheckFifo_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = brmerge_reg_1744)) and not((ap_const_lv1_0 = cics_wasLast_load_reg_1740))));
    end process;


    -- ap_sig_bdd_154 assign process. --
    ap_sig_bdd_154_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_154 <= (ap_const_lv1_1 = ap_CS_fsm1(1 downto 1));
    end process;


    -- ap_sig_bdd_161 assign process. --
    ap_sig_bdd_161_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_51, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_161 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))));
    end process;


    -- ap_sig_bdd_202 assign process. --
    ap_sig_bdd_202_assign_proc : process(brmerge_fu_512_p2, cics_wasLast_load_load_fu_492_p1)
    begin
                ap_sig_bdd_202 <= (not((brmerge_fu_512_p2 = ap_const_lv1_0)) and not((ap_const_lv1_0 = cics_wasLast_load_load_fu_492_p1)));
    end process;


    -- ap_sig_bdd_217 assign process. --
    ap_sig_bdd_217_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, brmerge_fu_512_p2, ap_sig_bdd_51, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_217 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))));
    end process;


    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm0)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm0(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_261 assign process. --
    ap_sig_bdd_261_assign_proc : process(brmerge_fu_512_p2, cics_wordCount_V_load_load_fu_540_p1, tmp_s_fu_663_p2)
    begin
                ap_sig_bdd_261 <= ((brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv1_0 = tmp_s_fu_663_p2)));
    end process;


    -- ap_sig_bdd_325 assign process. --
    ap_sig_bdd_325_assign_proc : process(brmerge_fu_512_p2, currWord_last_V_fu_532_p3)
    begin
                ap_sig_bdd_325 <= ((brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = currWord_last_V_fu_532_p3)));
    end process;


    -- ap_sig_bdd_338 assign process. --
    ap_sig_bdd_338_assign_proc : process(ap_done_reg, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_338 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148)));
    end process;


    -- ap_sig_bdd_34 assign process. --
    ap_sig_bdd_34_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_34 <= (ap_const_lv1_1 = ap_CS_fsm1(0 downto 0));
    end process;


    -- ap_sig_bdd_344 assign process. --
    ap_sig_bdd_344_assign_proc : process(brmerge_fu_512_p2, cics_wordCount_V_load_load_fu_540_p1, tmp_s_fu_663_p2)
    begin
                ap_sig_bdd_344 <= ((brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and (ap_const_lv1_0 = tmp_s_fu_663_p2));
    end process;


    -- ap_sig_bdd_380 assign process. --
    ap_sig_bdd_380_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, brmerge_fu_512_p2)
    begin
                ap_sig_bdd_380 <= ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0));
    end process;


    -- ap_sig_bdd_417 assign process. --
    ap_sig_bdd_417_assign_proc : process(ap_done_reg, brmerge_reg_1744, cics_wordCount_V_load_reg_1769, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_417 <= ((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148)));
    end process;


    -- ap_sig_bdd_51 assign process. --
    ap_sig_bdd_51_assign_proc : process(ap_start, ap_done_reg, ipDataFifo_V_empty_n, brmerge_fu_512_p2)
    begin
                ap_sig_bdd_51 <= (((ipDataFifo_V_empty_n = ap_const_logic_0) and (brmerge_fu_512_p2 = ap_const_lv1_0)) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_74 assign process. --
    ap_sig_bdd_74_assign_proc : process(brmerge_reg_1744, cics_wordCount_V_load_reg_1769, tmp_6_reg_1787, tmp_50_reg_1791)
    begin
                ap_sig_bdd_74 <= ((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_2) and not((ap_const_lv1_0 = tmp_6_reg_1787)) and (ap_const_lv1_0 = tmp_50_reg_1791));
    end process;


    -- ap_sig_bdd_79 assign process. --
    ap_sig_bdd_79_assign_proc : process(brmerge_reg_1744, cics_wordCount_V_load_reg_1769, tmp_6_reg_1787, tmp_50_reg_1791)
    begin
                ap_sig_bdd_79 <= (((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_2) and (ap_const_lv1_0 = tmp_6_reg_1787)) or ((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_2) and not((ap_const_lv1_0 = tmp_50_reg_1791))));
    end process;


    -- ap_sig_cseq_ST_st0_fsm1_0 assign process. --
    ap_sig_cseq_ST_st0_fsm1_0_assign_proc : process(ap_sig_bdd_34)
    begin
        if (ap_sig_bdd_34) then 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm0_0 assign process. --
    ap_sig_cseq_ST_st1_fsm0_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm1_1 assign process. --
    ap_sig_cseq_ST_st2_fsm1_1_assign_proc : process(ap_sig_bdd_154)
    begin
        if (ap_sig_bdd_154) then 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge_fu_512_p2 <= (cics_wasLast or tmp_not_fu_506_p2);
    cics_ipHeaderLen_V_load_load_fu_548_p1 <= cics_ipHeaderLen_V;
    cics_wasLast_load_load_fu_492_p1 <= cics_wasLast;

    -- cics_wordCount_V_flag_1_phi_fu_339_p4 assign process. --
    cics_wordCount_V_flag_1_phi_fu_339_p4_assign_proc : process(cics_wordCount_V_flag_phi_fu_275_p16, ap_reg_phiprechg_cics_wordCount_V_flag_1_reg_336pp0_it0, currWord_last_V_fu_532_p3, ap_sig_bdd_380)
    begin
        if (ap_sig_bdd_380) then
            if ((ap_const_lv1_0 = currWord_last_V_fu_532_p3)) then 
                cics_wordCount_V_flag_1_phi_fu_339_p4 <= cics_wordCount_V_flag_phi_fu_275_p16;
            elsif (not((ap_const_lv1_0 = currWord_last_V_fu_532_p3))) then 
                cics_wordCount_V_flag_1_phi_fu_339_p4 <= ap_const_lv1_1;
            else 
                cics_wordCount_V_flag_1_phi_fu_339_p4 <= ap_reg_phiprechg_cics_wordCount_V_flag_1_reg_336pp0_it0;
            end if;
        else 
            cics_wordCount_V_flag_1_phi_fu_339_p4 <= ap_reg_phiprechg_cics_wordCount_V_flag_1_reg_336pp0_it0;
        end if; 
    end process;


    -- cics_wordCount_V_flag_phi_fu_275_p16 assign process. --
    cics_wordCount_V_flag_phi_fu_275_p16_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, brmerge_fu_512_p2, cics_wordCount_V_load_load_fu_540_p1, cics_ipHeaderLen_V_load_load_fu_548_p1, ap_reg_phiprechg_cics_wordCount_V_flag_reg_272pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and (ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and (ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and (ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and (ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)))) then 
            cics_wordCount_V_flag_phi_fu_275_p16 <= ap_const_lv1_1;
        elsif ((((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_548_p1)) and not((ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_548_p1)) and not((ap_const_lv8_0 = cics_ipHeaderLen_V_load_load_fu_548_p1))) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and (ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_548_p1)) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and (ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_548_p1)) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and (ap_const_lv8_0 = cics_ipHeaderLen_V_load_load_fu_548_p1)))) then 
            cics_wordCount_V_flag_phi_fu_275_p16 <= ap_const_lv1_0;
        else 
            cics_wordCount_V_flag_phi_fu_275_p16 <= ap_reg_phiprechg_cics_wordCount_V_flag_reg_272pp0_it0;
        end if; 
    end process;

    cics_wordCount_V_load_load_fu_540_p1 <= cics_wordCount_V;

    -- cics_wordCount_V_loc_phi_fu_304_p16 assign process. --
    cics_wordCount_V_loc_phi_fu_304_p16_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, brmerge_fu_512_p2, cics_wordCount_V, cics_wordCount_V_load_load_fu_540_p1, cics_ipHeaderLen_V_load_load_fu_548_p1, ap_reg_phiprechg_cics_wordCount_V_loc_reg_301pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and (ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1))) then 
            cics_wordCount_V_loc_phi_fu_304_p16 <= ap_const_lv3_2;
        elsif (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and (ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1))) then 
            cics_wordCount_V_loc_phi_fu_304_p16 <= ap_const_lv3_3;
        elsif (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and (ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1))) then 
            cics_wordCount_V_loc_phi_fu_304_p16 <= ap_const_lv3_1;
        elsif (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and (ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1))) then 
            cics_wordCount_V_loc_phi_fu_304_p16 <= ap_const_lv3_4;
        elsif ((((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_548_p1)) and not((ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_548_p1)) and not((ap_const_lv8_0 = cics_ipHeaderLen_V_load_load_fu_548_p1))) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and (ap_const_lv8_2 = cics_ipHeaderLen_V_load_load_fu_548_p1)) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and (ap_const_lv8_1 = cics_ipHeaderLen_V_load_load_fu_548_p1)) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv3_3 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_2 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_1 = cics_wordCount_V_load_load_fu_540_p1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_540_p1)) and (ap_const_lv8_0 = cics_ipHeaderLen_V_load_load_fu_548_p1)))) then 
            cics_wordCount_V_loc_phi_fu_304_p16 <= cics_wordCount_V;
        else 
            cics_wordCount_V_loc_phi_fu_304_p16 <= ap_reg_phiprechg_cics_wordCount_V_loc_reg_301pp0_it0;
        end if; 
    end process;


    -- cics_wordCount_V_new_1_phi_fu_351_p4 assign process. --
    cics_wordCount_V_new_1_phi_fu_351_p4_assign_proc : process(cics_wordCount_V_loc_phi_fu_304_p16, currWord_last_V_fu_532_p3, ap_reg_phiprechg_cics_wordCount_V_new_1_reg_348pp0_it0, ap_sig_bdd_380)
    begin
        if (ap_sig_bdd_380) then
            if ((ap_const_lv1_0 = currWord_last_V_fu_532_p3)) then 
                cics_wordCount_V_new_1_phi_fu_351_p4 <= cics_wordCount_V_loc_phi_fu_304_p16;
            elsif (not((ap_const_lv1_0 = currWord_last_V_fu_532_p3))) then 
                cics_wordCount_V_new_1_phi_fu_351_p4 <= ap_const_lv3_0;
            else 
                cics_wordCount_V_new_1_phi_fu_351_p4 <= ap_reg_phiprechg_cics_wordCount_V_new_1_reg_348pp0_it0;
            end if;
        else 
            cics_wordCount_V_new_1_phi_fu_351_p4 <= ap_reg_phiprechg_cics_wordCount_V_new_1_reg_348pp0_it0;
        end if; 
    end process;

    currWord_data_V_fu_518_p1 <= ipDataFifo_V_dout(64 - 1 downto 0);
    currWord_last_V_fu_532_p3 <= ipDataFifo_V_dout(72 downto 72);
    extLd_fu_740_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_0),17));
    grp_fu_369_p2 <= std_logic_vector(signed(ap_const_lv8_FE) + signed(cics_ipHeaderLen_V));
    grp_fu_404_p4 <= tmp38_reg_1748(15 downto 8);
    grp_fu_413_p4 <= tmp38_reg_1748(31 downto 24);
    grp_fu_422_p4 <= tmp38_reg_1748(23 downto 16);
    grp_fu_431_p4 <= tmp38_reg_1748(47 downto 40);
    grp_fu_440_p4 <= tmp38_reg_1748(39 downto 32);
    grp_fu_449_p4 <= tmp38_reg_1748(63 downto 56);
    grp_fu_458_p4 <= tmp38_reg_1748(55 downto 48);
    grp_fu_467_p2 <= "1" when (ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it1 = myIpAddress_V_read_reg_1735) else "0";
    grp_fu_472_p2 <= "1" when (ap_reg_phiprechg_cics_dstIpAddress_V_loc_reg_359pp0_it1 = ap_const_lv32_FFFFFFFF) else "0";
    grp_fu_478_p2 <= (grp_fu_467_p2 or grp_fu_472_p2);

    -- ipDataCheckFifo_V_din assign process. --
    ipDataCheckFifo_V_din_assign_proc : process(tmp_3_3_fu_1701_p6, tmp_4_fu_1724_p4, ap_sig_bdd_133, ap_sig_bdd_140, ap_sig_bdd_338)
    begin
        if (ap_sig_bdd_338) then
            if (ap_sig_bdd_140) then 
                ipDataCheckFifo_V_din <= tmp_4_fu_1724_p4;
            elsif (ap_sig_bdd_133) then 
                ipDataCheckFifo_V_din <= tmp_3_3_fu_1701_p6;
            else 
                ipDataCheckFifo_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ipDataCheckFifo_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- ipDataCheckFifo_V_write assign process. --
    ipDataCheckFifo_V_write_assign_proc : process(ap_done_reg, brmerge_reg_1744, tmp_25_reg_1807, cics_wasLast_load_reg_1740, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((((ap_const_lv1_0 = brmerge_reg_1744) and not((ap_const_lv1_0 = tmp_25_reg_1807)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148))) or (not((ap_const_lv1_0 = brmerge_reg_1744)) and not((ap_const_lv1_0 = cics_wasLast_load_reg_1740)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148))))) then 
            ipDataCheckFifo_V_write <= ap_const_logic_1;
        else 
            ipDataCheckFifo_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- ipDataFifo_V_read assign process. --
    ipDataFifo_V_read_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, brmerge_fu_512_p2, ap_sig_bdd_51, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_51 or (ap_sig_bdd_148 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            ipDataFifo_V_read <= ap_const_logic_1;
        else 
            ipDataFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- ipFragmentDrop_V_V_din assign process. --
    ipFragmentDrop_V_V_din_assign_proc : process(ap_sig_bdd_338, ap_sig_bdd_74, ap_sig_bdd_79)
    begin
        if (ap_sig_bdd_338) then
            if (ap_sig_bdd_79) then 
                ipFragmentDrop_V_V_din <= ap_const_lv1_0;
            elsif (ap_sig_bdd_74) then 
                ipFragmentDrop_V_V_din <= ap_const_lv1_1;
            else 
                ipFragmentDrop_V_V_din <= "X";
            end if;
        else 
            ipFragmentDrop_V_V_din <= "X";
        end if; 
    end process;


    -- ipFragmentDrop_V_V_write assign process. --
    ipFragmentDrop_V_V_write_assign_proc : process(ap_done_reg, brmerge_reg_1744, cics_wordCount_V_load_reg_1769, tmp_6_reg_1787, tmp_50_reg_1791, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_2) and not((ap_const_lv1_0 = tmp_6_reg_1787)) and (ap_const_lv1_0 = tmp_50_reg_1791) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148))) or ((((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_2) and (ap_const_lv1_0 = tmp_6_reg_1787)) or ((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_2) and not((ap_const_lv1_0 = tmp_50_reg_1791)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148))))) then 
            ipFragmentDrop_V_V_write <= ap_const_logic_1;
        else 
            ipFragmentDrop_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- ipValidFifoVersionNo_V_V_din assign process. --
    ipValidFifoVersionNo_V_V_din_assign_proc : process(tmp_5_reg_1795, ap_sig_bdd_417)
    begin
        if (ap_sig_bdd_417) then
            if (not((ap_const_lv1_0 = tmp_5_reg_1795))) then 
                ipValidFifoVersionNo_V_V_din <= ap_const_lv1_1;
            elsif ((ap_const_lv1_0 = tmp_5_reg_1795)) then 
                ipValidFifoVersionNo_V_V_din <= ap_const_lv1_0;
            else 
                ipValidFifoVersionNo_V_V_din <= "X";
            end if;
        else 
            ipValidFifoVersionNo_V_V_din <= "X";
        end if; 
    end process;


    -- ipValidFifoVersionNo_V_V_write assign process. --
    ipValidFifoVersionNo_V_V_write_assign_proc : process(ap_done_reg, brmerge_reg_1744, cics_wordCount_V_load_reg_1769, tmp_5_reg_1795, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_1) and (ap_const_lv1_0 = tmp_5_reg_1795) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148))) or ((ap_const_lv1_0 = brmerge_reg_1744) and (cics_wordCount_V_load_reg_1769 = ap_const_lv3_1) and not((ap_const_lv1_0 = tmp_5_reg_1795)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148))))) then 
            ipValidFifoVersionNo_V_V_write <= ap_const_logic_1;
        else 
            ipValidFifoVersionNo_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- iph_subSumsFifoOut_V_din assign process. --
    iph_subSumsFifoOut_V_din_assign_proc : process(cics_ipHeaderLen_V_load_reg_1773, tmp_2_2_fu_1414_p6, tmp_1_6_fu_1482_p6, ap_sig_bdd_1196)
    begin
        if (ap_sig_bdd_1196) then
            if ((cics_ipHeaderLen_V_load_reg_1773 = ap_const_lv8_1)) then 
                iph_subSumsFifoOut_V_din <= tmp_1_6_fu_1482_p6;
            elsif ((cics_ipHeaderLen_V_load_reg_1773 = ap_const_lv8_2)) then 
                iph_subSumsFifoOut_V_din <= tmp_2_2_fu_1414_p6;
            else 
                iph_subSumsFifoOut_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            iph_subSumsFifoOut_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- iph_subSumsFifoOut_V_write assign process. --
    iph_subSumsFifoOut_V_write_assign_proc : process(ap_done_reg, brmerge_reg_1744, cics_wordCount_V_load_reg_1769, cics_ipHeaderLen_V_load_reg_1773, ap_sig_bdd_148, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if ((((ap_const_lv1_0 = brmerge_reg_1744) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1773 = ap_const_lv8_2) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148))) or ((ap_const_lv1_0 = brmerge_reg_1744) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_3)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_2)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_1)) and not((cics_wordCount_V_load_reg_1769 = ap_const_lv3_0)) and (cics_ipHeaderLen_V_load_reg_1773 = ap_const_lv8_1) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_148))))) then 
            iph_subSumsFifoOut_V_write <= ap_const_logic_1;
        else 
            iph_subSumsFifoOut_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_2_fu_653_p1 <= std_logic_vector(resize(unsigned(p_Result_9_fu_643_p4),8));
    p_Result_10_fu_1687_p4 <= tmp38_reg_1748(69 downto 64);
    p_Result_11_fu_1716_p1 <= std_logic_vector(resize(unsigned(reg_484),64));
    p_Result_12_fu_1720_p1 <= std_logic_vector(resize(unsigned(reg_488),8));
    p_Result_2_fu_627_p4 <= ipDataFifo_V_dout(55 downto 52);
    p_Result_4_fu_605_p3 <= (tmp_7_fu_595_p4 & p_Result_i1_fu_585_p4);
    p_Result_6_fu_673_p5 <= (tmp_49_fu_669_p1 & cics_dstIpAddress_V(15 downto 0));
    p_Result_9_fu_643_p4 <= ipDataFifo_V_dout(51 downto 48);
    p_Result_i1_fu_585_p4 <= ipDataFifo_V_dout(47 downto 40);
    p_Result_s_fu_567_p5 <= (cics_dstIpAddress_V(31 downto 16) & p_Val2_5_fu_557_p4);
    p_Val2_5_fu_557_p4 <= ipDataFifo_V_dout(63 downto 48);
    temp_V_fu_955_p3 <= (grp_fu_440_p4 & p_Result_i1_reg_1782);
    tmp_100_fu_1037_p1 <= tmp_61_1_fu_1023_p2(16 - 1 downto 0);
    tmp_101_fu_1041_p1 <= std_logic_vector(resize(unsigned(tmp_99_fu_1029_p3),16));
    tmp_102_fu_1045_p2 <= std_logic_vector(unsigned(tmp_101_fu_1041_p1) + unsigned(tmp_100_fu_1037_p1));
    tmp_103_fu_1067_p3 <= tmp_61_2_fu_1061_p2(16 downto 16);
    tmp_104_fu_1075_p1 <= tmp_61_2_fu_1061_p2(16 - 1 downto 0);
    tmp_105_fu_1079_p1 <= std_logic_vector(resize(unsigned(tmp_103_fu_1067_p3),16));
    tmp_106_fu_1083_p2 <= std_logic_vector(unsigned(tmp_105_fu_1079_p1) + unsigned(tmp_104_fu_1075_p1));
    tmp_107_fu_1113_p3 <= tmp_61_3_fu_1107_p2(16 downto 16);
    tmp_108_fu_1121_p1 <= tmp_61_3_fu_1107_p2(16 - 1 downto 0);
    tmp_109_fu_1125_p1 <= std_logic_vector(resize(unsigned(tmp_107_fu_1113_p3),16));
    tmp_110_fu_1129_p2 <= std_logic_vector(unsigned(tmp_109_fu_1125_p1) + unsigned(tmp_108_fu_1121_p1));
    tmp_111_fu_1684_p1 <= tmp38_reg_1748(48 - 1 downto 0);
    tmp_11_fu_1440_p1 <= std_logic_vector(resize(unsigned(tmp_i1_fu_1432_p3),17));
    tmp_12_fu_1444_p2 <= std_logic_vector(unsigned(tmp_11_fu_1440_p1) + unsigned(extLd_fu_740_p1));
    tmp_15_fu_1222_p1 <= std_logic_vector(resize(unsigned(tmp_i10_fu_1214_p3),17));
    tmp_16_fu_1226_p2 <= std_logic_vector(unsigned(extLd_fu_740_p1) + unsigned(tmp_15_fu_1222_p1));
    tmp_19_fu_1149_p1 <= std_logic_vector(resize(unsigned(tmp_i_fu_1141_p3),17));
    tmp_1_6_fu_1482_p6 <= ((((grp_fu_478_p2 & tmp_sum3_V_fu_764_p1) & tmp_sum2_V_fu_756_p1) & tmp_sum1_V_fu_748_p1) & tmp_sum0_V_cast_fu_1472_p1);
    tmp_20_fu_1153_p2 <= std_logic_vector(unsigned(tmp_19_fu_1149_p1) + unsigned(tmp_sum3_V_fu_764_p1));
    tmp_21_fu_973_p1 <= std_logic_vector(resize(unsigned(tmp_i14_fu_965_p3),17));
    tmp_22_fu_977_p2 <= std_logic_vector(unsigned(extLd_fu_740_p1) + unsigned(tmp_21_fu_973_p1));
    tmp_23_fu_768_p1 <= tmp38_reg_1748(8 - 1 downto 0);
    tmp_25_fu_691_p2 <= "1" when (unsigned(cics_wordCount_V_loc_phi_fu_304_p16) > unsigned(ap_const_lv3_2)) else "0";

    -- tmp_26_phi_fu_329_p4 assign process. --
    tmp_26_phi_fu_329_p4_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ipDataFifo_V_dout, brmerge_fu_512_p2, tmp_25_fu_691_p2, ap_reg_phiprechg_tmp_26_reg_326pp0_it0)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (brmerge_fu_512_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_25_fu_691_p2)))) then 
            tmp_26_phi_fu_329_p4 <= ipDataFifo_V_dout(70 downto 70);
        else 
            tmp_26_phi_fu_329_p4 <= ap_reg_phiprechg_tmp_26_reg_326pp0_it0;
        end if; 
    end process;

    tmp_28_fu_789_p3 <= tmp_9_fu_783_p2(16 downto 16);
    tmp_2_2_fu_1414_p6 <= ((((grp_fu_478_p2 & tmp_sum3_V_1_cast_fu_1404_p1) & tmp_sum2_V_1_cast_fu_1354_p1) & tmp_sum1_V_1_cast_fu_1304_p1) & tmp_sum0_V_1_cast_fu_1254_p1);
    tmp_2_fu_1508_p1 <= std_logic_vector(resize(unsigned(tmp_i6_fu_1500_p3),17));
    tmp_31_fu_797_p1 <= tmp_9_fu_783_p2(16 - 1 downto 0);
    tmp_35_fu_801_p1 <= std_logic_vector(resize(unsigned(tmp_28_fu_789_p3),16));
    tmp_36_fu_805_p2 <= std_logic_vector(unsigned(tmp_35_fu_801_p1) + unsigned(tmp_31_fu_797_p1));
    tmp_37_fu_835_p3 <= tmp_41_1_fu_829_p2(16 downto 16);
    tmp_38_fu_843_p1 <= tmp_41_1_fu_829_p2(16 - 1 downto 0);
    tmp_39_fu_847_p1 <= std_logic_vector(resize(unsigned(tmp_37_fu_835_p3),16));
    tmp_3_3_fu_1701_p6 <= ((((tmp_last_V_fu_1696_p2 & p_Result_10_fu_1687_p4) & reg_488) & tmp_111_fu_1684_p1) & reg_484);
    tmp_3_fu_1512_p2 <= std_logic_vector(unsigned(extLd_fu_740_p1) + unsigned(tmp_2_fu_1508_p1));
    tmp_40_1_fu_825_p1 <= std_logic_vector(resize(unsigned(tmp_i3_fu_817_p3),17));
    tmp_40_2_fu_871_p1 <= std_logic_vector(resize(unsigned(tmp_i4_fu_863_p3),17));
    tmp_40_3_fu_917_p1 <= std_logic_vector(resize(unsigned(tmp_i5_fu_909_p3),17));
    tmp_40_fu_851_p2 <= std_logic_vector(unsigned(tmp_39_fu_847_p1) + unsigned(tmp_38_fu_843_p1));
    tmp_41_1_fu_829_p2 <= std_logic_vector(unsigned(tmp_sum1_V_fu_748_p1) + unsigned(tmp_40_1_fu_825_p1));
    tmp_41_2_fu_875_p2 <= std_logic_vector(unsigned(tmp_sum2_V_fu_756_p1) + unsigned(tmp_40_2_fu_871_p1));
    tmp_41_3_fu_921_p2 <= std_logic_vector(unsigned(tmp_sum3_V_fu_764_p1) + unsigned(tmp_40_3_fu_917_p1));
    tmp_41_fu_881_p3 <= tmp_41_2_fu_875_p2(16 downto 16);
    tmp_42_fu_889_p1 <= tmp_41_2_fu_875_p2(16 - 1 downto 0);
    tmp_43_fu_893_p1 <= std_logic_vector(resize(unsigned(tmp_41_fu_881_p3),16));
    tmp_44_fu_897_p2 <= std_logic_vector(unsigned(tmp_43_fu_893_p1) + unsigned(tmp_42_fu_889_p1));
    tmp_45_fu_927_p3 <= tmp_41_3_fu_921_p2(16 downto 16);
    tmp_46_fu_935_p1 <= tmp_41_3_fu_921_p2(16 - 1 downto 0);
    tmp_47_1_fu_1554_p1 <= std_logic_vector(resize(unsigned(tmp_i7_fu_1546_p3),17));
    tmp_47_2_fu_1600_p1 <= std_logic_vector(resize(unsigned(tmp_i8_fu_1592_p3),17));
    tmp_47_3_fu_1646_p1 <= std_logic_vector(resize(unsigned(tmp_i9_fu_1638_p3),17));
    tmp_47_fu_939_p1 <= std_logic_vector(resize(unsigned(tmp_45_fu_927_p3),16));
    tmp_48_1_fu_1558_p2 <= std_logic_vector(unsigned(tmp_sum1_V_fu_748_p1) + unsigned(tmp_47_1_fu_1554_p1));
    tmp_48_2_fu_1604_p2 <= std_logic_vector(unsigned(tmp_sum2_V_fu_756_p1) + unsigned(tmp_47_2_fu_1600_p1));
    tmp_48_3_fu_1650_p2 <= std_logic_vector(unsigned(tmp_sum3_V_fu_764_p1) + unsigned(tmp_47_3_fu_1646_p1));
    tmp_48_fu_943_p2 <= std_logic_vector(unsigned(tmp_47_fu_939_p1) + unsigned(tmp_46_fu_935_p1));
    tmp_49_fu_669_p1 <= ipDataFifo_V_dout(16 - 1 downto 0);
    tmp_4_fu_1724_p4 <= ((ap_const_lv1_1 & p_Result_12_fu_1720_p1) & p_Result_11_fu_1716_p1);
    tmp_51_fu_1497_p1 <= tmp38_reg_1748(8 - 1 downto 0);
    tmp_52_fu_1518_p3 <= tmp_3_fu_1512_p2(16 downto 16);
    tmp_53_1_fu_1272_p1 <= std_logic_vector(resize(unsigned(tmp_i11_fu_1264_p3),17));
    tmp_53_2_fu_1322_p1 <= std_logic_vector(resize(unsigned(tmp_i12_fu_1314_p3),17));
    tmp_53_3_fu_1372_p1 <= std_logic_vector(resize(unsigned(tmp_i13_fu_1364_p3),17));
    tmp_53_fu_1526_p1 <= tmp_3_fu_1512_p2(16 - 1 downto 0);
    tmp_54_1_fu_1276_p2 <= std_logic_vector(unsigned(tmp_sum1_V_fu_748_p1) + unsigned(tmp_53_1_fu_1272_p1));
    tmp_54_2_fu_1326_p2 <= std_logic_vector(unsigned(tmp_sum2_V_fu_756_p1) + unsigned(tmp_53_2_fu_1322_p1));
    tmp_54_3_fu_1376_p2 <= std_logic_vector(unsigned(tmp_sum3_V_fu_764_p1) + unsigned(tmp_53_3_fu_1372_p1));
    tmp_54_fu_1530_p1 <= std_logic_vector(resize(unsigned(tmp_52_fu_1518_p3),16));
    tmp_55_fu_1534_p2 <= std_logic_vector(unsigned(tmp_54_fu_1530_p1) + unsigned(tmp_53_fu_1526_p1));
    tmp_56_fu_1564_p3 <= tmp_48_1_fu_1558_p2(16 downto 16);
    tmp_57_fu_1572_p1 <= tmp_48_1_fu_1558_p2(16 - 1 downto 0);
    tmp_58_fu_1576_p1 <= std_logic_vector(resize(unsigned(tmp_56_fu_1564_p3),16));
    tmp_59_fu_1580_p2 <= std_logic_vector(unsigned(tmp_58_fu_1576_p1) + unsigned(tmp_57_fu_1572_p1));
    tmp_5_fu_637_p2 <= "1" when (p_Result_2_fu_627_p4 = ap_const_lv4_4) else "0";
    tmp_60_1_fu_1019_p1 <= std_logic_vector(resize(unsigned(tmp_i15_fu_1011_p3),17));
    tmp_60_2_fu_1057_p1 <= std_logic_vector(resize(unsigned(temp_V_fu_955_p3),17));
    tmp_60_3_fu_1103_p1 <= std_logic_vector(resize(unsigned(tmp_i16_fu_1095_p3),17));
    tmp_60_fu_1610_p3 <= tmp_48_2_fu_1604_p2(16 downto 16);
    tmp_61_1_fu_1023_p2 <= std_logic_vector(unsigned(tmp_sum1_V_fu_748_p1) + unsigned(tmp_60_1_fu_1019_p1));
    tmp_61_2_fu_1061_p2 <= std_logic_vector(unsigned(tmp_sum2_V_fu_756_p1) + unsigned(tmp_60_2_fu_1057_p1));
    tmp_61_3_fu_1107_p2 <= std_logic_vector(unsigned(tmp_sum3_V_fu_764_p1) + unsigned(tmp_60_3_fu_1103_p1));
    tmp_61_fu_1618_p1 <= tmp_48_2_fu_1604_p2(16 - 1 downto 0);
    tmp_62_fu_1622_p1 <= std_logic_vector(resize(unsigned(tmp_60_fu_1610_p3),16));
    tmp_63_fu_1626_p2 <= std_logic_vector(unsigned(tmp_62_fu_1622_p1) + unsigned(tmp_61_fu_1618_p1));
    tmp_64_fu_1656_p3 <= tmp_48_3_fu_1650_p2(16 downto 16);
    tmp_65_fu_1664_p1 <= tmp_48_3_fu_1650_p2(16 - 1 downto 0);
    tmp_66_fu_1668_p1 <= std_logic_vector(resize(unsigned(tmp_64_fu_1656_p3),16));
    tmp_67_fu_1672_p2 <= std_logic_vector(unsigned(tmp_66_fu_1668_p1) + unsigned(tmp_65_fu_1664_p1));
    tmp_68_fu_1429_p1 <= tmp38_reg_1748(8 - 1 downto 0);
    tmp_69_fu_1450_p3 <= tmp_12_fu_1444_p2(16 downto 16);
    tmp_6_fu_613_p2 <= "1" when (p_Result_4_fu_605_p3 = ap_const_lv13_0) else "0";
    tmp_70_fu_1458_p1 <= std_logic_vector(resize(unsigned(tmp_69_fu_1450_p3),16));
    tmp_71_fu_1462_p1 <= tmp_12_fu_1444_p2(16 - 1 downto 0);
    tmp_73_fu_1211_p1 <= tmp38_reg_1748(8 - 1 downto 0);
    tmp_74_fu_1232_p3 <= tmp_16_fu_1226_p2(16 downto 16);
    tmp_75_fu_1240_p1 <= tmp_16_fu_1226_p2(16 - 1 downto 0);
    tmp_76_fu_1244_p1 <= std_logic_vector(resize(unsigned(tmp_74_fu_1232_p3),16));
    tmp_78_fu_1282_p3 <= tmp_54_1_fu_1276_p2(16 downto 16);
    tmp_79_fu_1290_p1 <= tmp_54_1_fu_1276_p2(16 - 1 downto 0);
    tmp_7_fu_595_p4 <= ipDataFifo_V_dout(36 downto 32);
    tmp_80_fu_1294_p1 <= std_logic_vector(resize(unsigned(tmp_78_fu_1282_p3),16));
    tmp_82_fu_1332_p3 <= tmp_54_2_fu_1326_p2(16 downto 16);
    tmp_83_fu_1340_p1 <= tmp_54_2_fu_1326_p2(16 - 1 downto 0);
    tmp_84_fu_1344_p1 <= std_logic_vector(resize(unsigned(tmp_82_fu_1332_p3),16));
    tmp_86_fu_1382_p3 <= tmp_54_3_fu_1376_p2(16 downto 16);
    tmp_87_fu_1390_p1 <= tmp_54_3_fu_1376_p2(16 - 1 downto 0);
    tmp_88_fu_1394_p1 <= std_logic_vector(resize(unsigned(tmp_86_fu_1382_p3),16));
    tmp_8_fu_779_p1 <= std_logic_vector(resize(unsigned(tmp_i2_fu_771_p3),17));
    tmp_90_fu_1159_p3 <= tmp_20_fu_1153_p2(16 downto 16);
    tmp_91_fu_1167_p1 <= std_logic_vector(resize(unsigned(tmp_90_fu_1159_p3),16));
    tmp_92_fu_1171_p1 <= tmp_20_fu_1153_p2(16 - 1 downto 0);
    tmp_93_fu_1175_p2 <= std_logic_vector(unsigned(tmp_92_fu_1171_p1) + unsigned(tmp_91_fu_1167_p1));
    tmp_94_fu_962_p1 <= tmp38_reg_1748(8 - 1 downto 0);
    tmp_95_fu_983_p3 <= tmp_22_fu_977_p2(16 downto 16);
    tmp_96_fu_991_p1 <= tmp_22_fu_977_p2(16 - 1 downto 0);
    tmp_97_fu_995_p1 <= std_logic_vector(resize(unsigned(tmp_95_fu_983_p3),16));
    tmp_98_fu_999_p2 <= std_logic_vector(unsigned(tmp_97_fu_995_p1) + unsigned(tmp_96_fu_991_p1));
    tmp_99_fu_1029_p3 <= tmp_61_1_fu_1023_p2(16 downto 16);
    tmp_9_fu_783_p2 <= std_logic_vector(unsigned(extLd_fu_740_p1) + unsigned(tmp_8_fu_779_p1));
    tmp_i10_fu_1214_p3 <= (tmp_73_fu_1211_p1 & grp_fu_404_p4);
    tmp_i11_fu_1264_p3 <= (grp_fu_422_p4 & grp_fu_413_p4);
    tmp_i12_fu_1314_p3 <= (grp_fu_440_p4 & grp_fu_431_p4);
    tmp_i13_fu_1364_p3 <= (grp_fu_458_p4 & grp_fu_449_p4);
    tmp_i14_fu_965_p3 <= (tmp_94_fu_962_p1 & grp_fu_404_p4);
    tmp_i15_fu_1011_p3 <= (grp_fu_422_p4 & grp_fu_413_p4);
    tmp_i16_fu_1095_p3 <= (grp_fu_458_p4 & grp_fu_449_p4);
    tmp_i1_fu_1432_p3 <= (tmp_68_fu_1429_p1 & grp_fu_404_p4);
    tmp_i2_fu_771_p3 <= (tmp_23_fu_768_p1 & grp_fu_404_p4);
    tmp_i3_fu_817_p3 <= (grp_fu_422_p4 & grp_fu_413_p4);
    tmp_i4_fu_863_p3 <= (grp_fu_440_p4 & grp_fu_431_p4);
    tmp_i5_fu_909_p3 <= (grp_fu_458_p4 & grp_fu_449_p4);
    tmp_i6_fu_1500_p3 <= (tmp_51_fu_1497_p1 & grp_fu_404_p4);
    tmp_i7_fu_1546_p3 <= (grp_fu_422_p4 & grp_fu_413_p4);
    tmp_i8_fu_1592_p3 <= (grp_fu_440_p4 & grp_fu_431_p4);
    tmp_i9_fu_1638_p3 <= (grp_fu_458_p4 & grp_fu_449_p4);
    tmp_i_fu_1141_p3 <= (grp_fu_458_p4 & grp_fu_449_p4);
    tmp_last_V_fu_1696_p2 <= (tmp_112_reg_1811 xor ap_const_lv1_1);
    tmp_not_fu_506_p0 <= (0=>ipDataFifo_V_empty_n, others=>'-');
    tmp_not_fu_506_p2 <= (tmp_not_fu_506_p0 xor ap_const_lv1_1);
    tmp_s_fu_663_p2 <= "1" when (cics_wordCount_V = ap_const_lv3_4) else "0";
    tmp_sum0_V_1_cast_fu_1254_p1 <= std_logic_vector(resize(unsigned(tmp_sum0_V_1_fu_1248_p2),17));
    tmp_sum0_V_1_fu_1248_p2 <= std_logic_vector(unsigned(tmp_76_fu_1244_p1) + unsigned(tmp_75_fu_1240_p1));
    tmp_sum0_V_cast_fu_1472_p1 <= std_logic_vector(resize(unsigned(tmp_sum0_V_fu_1466_p2),17));
    tmp_sum0_V_fu_1466_p2 <= std_logic_vector(unsigned(tmp_71_fu_1462_p1) + unsigned(tmp_70_fu_1458_p1));
    tmp_sum1_V_1_cast_fu_1304_p1 <= std_logic_vector(resize(unsigned(tmp_sum1_V_1_fu_1298_p2),17));
    tmp_sum1_V_1_fu_1298_p2 <= std_logic_vector(unsigned(tmp_80_fu_1294_p1) + unsigned(tmp_79_fu_1290_p1));
    tmp_sum1_V_fu_748_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_1),17));
    tmp_sum2_V_1_cast_fu_1354_p1 <= std_logic_vector(resize(unsigned(tmp_sum2_V_1_fu_1348_p2),17));
    tmp_sum2_V_1_fu_1348_p2 <= std_logic_vector(unsigned(tmp_84_fu_1344_p1) + unsigned(tmp_83_fu_1340_p1));
    tmp_sum2_V_fu_756_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_2),17));
    tmp_sum3_V_1_cast_fu_1404_p1 <= std_logic_vector(resize(unsigned(tmp_sum3_V_1_fu_1398_p2),17));
    tmp_sum3_V_1_fu_1398_p2 <= std_logic_vector(unsigned(tmp_88_fu_1394_p1) + unsigned(tmp_87_fu_1390_p1));
    tmp_sum3_V_fu_764_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_3),17));
end behav;
