-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ip_handler_cut_length is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ipDataDropFifo_V_dout : IN STD_LOGIC_VECTOR (72 downto 0);
    ipDataDropFifo_V_empty_n : IN STD_LOGIC;
    ipDataDropFifo_V_read : OUT STD_LOGIC;
    ipDataCutFifo_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
    ipDataCutFifo_V_full_n : IN STD_LOGIC;
    ipDataCutFifo_V_write : OUT STD_LOGIC );
end;


architecture behav of ip_handler_cut_length is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm0_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_st2_fsm1_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st0_fsm1_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm0 : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm0_0 : STD_LOGIC;
    signal ap_sig_bdd_23 : BOOLEAN;
    signal ap_CS_fsm1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding of ap_CS_fsm1 : signal is "none";
    signal ap_sig_cseq_ST_st0_fsm1_0 : STD_LOGIC;
    signal ap_sig_bdd_34 : BOOLEAN;
    signal tmp_nbreadreq_fu_122_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_59 : BOOLEAN;
    signal cl_drop_load_reg_536 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_540 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_74 : BOOLEAN;
    signal ap_sig_cseq_ST_st2_fsm1_1 : STD_LOGIC;
    signal ap_sig_bdd_80 : BOOLEAN;
    signal cl_drop : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal cl_wordCount_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cl_totalLength_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal tmp_2_reg_143 : STD_LOGIC_VECTOR (72 downto 0);
    signal cond_fu_175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_159_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_tmp_2_reg_143pp0_it0 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_2_phi_fu_147_p6 : STD_LOGIC_VECTOR (72 downto 0);
    signal tmp_1_3_fu_455_p5 : STD_LOGIC_VECTOR (72 downto 0);
    signal p_tmp_s_fu_516_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_i_fu_488_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal lhs_V_cast_fu_185_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_fu_189_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_1_fu_195_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_cast_fu_203_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_132_fu_219_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_133_fu_231_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_32_fu_223_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal not_tmp_2_i_fu_241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal leftLength_V_fu_235_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_134_fu_251_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_fu_261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_267_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_cast_i_cast_fu_247_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal agg_result_V_buf_1_1_i_fu_275_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_2_i_fu_287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_293_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_V_buf_1_1_i_cast_ca_fu_283_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal agg_result_V_buf_1_2_i_fu_301_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_135_fu_313_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_136_fu_329_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp5_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_i_fu_337_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal agg_result_V_buf_1_2_i_cast_fu_309_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal agg_result_V_buf_1_3_i_fu_341_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_4_i_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_fu_355_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal agg_result_V_buf_1_4_i_fu_365_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_5_i_fu_373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_138_fu_379_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal agg_result_V_buf_1_5_i_fu_389_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_6_i_fu_397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_139_fu_403_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal agg_result_V_buf_1_6_i_fu_413_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_140_fu_421_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_141_fu_429_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_keep_V_fu_439_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_447_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_2_i_fu_478_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_fu_468_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_last_V_fu_502_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_510_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_bdd_400 : BOOLEAN;
    signal ap_sig_bdd_402 : BOOLEAN;
    signal ap_sig_bdd_397 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm0) of the state machine. --
    ap_CS_fsm0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
            else
                ap_CS_fsm0 <= ap_NS_fsm0;
            end if;
        end if;
    end process;


    -- the current state (ap_CS_fsm1) of the state machine. --
    ap_CS_fsm1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
            else
                ap_CS_fsm1 <= ap_NS_fsm1;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- cl_drop assign process. --
    cl_drop_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_397) then
                if (ap_sig_bdd_402) then 
                    cl_drop <= ap_const_lv1_0;
                elsif (ap_sig_bdd_400) then 
                    cl_drop <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;

    -- tmp_2_reg_143 assign process. --
    tmp_2_reg_143_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (cl_drop = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv1_0 = cond_fu_175_p2) and (ap_const_lv1_0 = tmp_s_fu_207_p2))) then 
                tmp_2_reg_143 <= tmp_1_3_fu_455_p5;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (cl_drop = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = cond_fu_175_p2))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (cl_drop = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and (ap_const_lv1_0 = cond_fu_175_p2) and not((ap_const_lv1_0 = tmp_s_fu_207_p2))))) then 
                tmp_2_reg_143 <= ipDataDropFifo_V_dout;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
                tmp_2_reg_143 <= ap_reg_phiprechg_tmp_2_reg_143pp0_it0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                cl_drop_load_reg_536 <= cl_drop;
                tmp_reg_540 <= tmp_nbreadreq_fu_122_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (cl_drop = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))) and not((ap_const_lv1_0 = cond_fu_175_p2)))) then
                cl_totalLength_V <= tmp_i_fu_488_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (cl_drop = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                cl_wordCount_V <= p_tmp_s_fu_516_p3;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm0) of the state machine. --
    ap_NS_fsm0_assign_proc : process (ap_done_reg, ap_CS_fsm0, ap_sig_bdd_59, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm0 is
            when ap_ST_st1_fsm0_0 => 
                ap_NS_fsm0 <= ap_ST_st1_fsm0_0;
            when others =>  
                ap_NS_fsm0 <= "X";
        end case;
    end process;

    -- the next state (ap_NS_fsm1) of the state machine. --
    ap_NS_fsm1_assign_proc : process (ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_CS_fsm1, ap_sig_bdd_59, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        case ap_CS_fsm1 is
            when ap_ST_st2_fsm1_1 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74)) and not(ap_sig_bdd_59))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74)) and (not((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and ap_sig_bdd_59)))) then
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                else
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                end if;
            when ap_ST_st0_fsm1_0 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                else
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                end if;
            when others =>  
                ap_NS_fsm1 <= "XX";
        end case;
    end process;
    agg_result_V_buf_1_1_i_cast_ca_fu_283_p1 <= std_logic_vector(resize(unsigned(agg_result_V_buf_1_1_i_fu_275_p3),3));
    agg_result_V_buf_1_1_i_fu_275_p3 <= 
        tmp_9_fu_267_p3 when (icmp_fu_261_p2(0) = '1') else 
        p_cast_i_cast_fu_247_p1;
    agg_result_V_buf_1_2_i_cast_fu_309_p1 <= std_logic_vector(resize(unsigned(agg_result_V_buf_1_2_i_fu_301_p3),8));
    agg_result_V_buf_1_2_i_fu_301_p3 <= 
        tmp_10_fu_293_p3 when (tmp_2_2_i_fu_287_p2(0) = '1') else 
        agg_result_V_buf_1_1_i_cast_ca_fu_283_p1;
    agg_result_V_buf_1_3_i_fu_341_p3 <= 
        p_Result_3_i_fu_337_p1 when (icmp5_fu_323_p2(0) = '1') else 
        agg_result_V_buf_1_2_i_cast_fu_309_p1;
    agg_result_V_buf_1_4_i_fu_365_p3 <= 
        tmp_137_fu_355_p4 when (tmp_2_4_i_fu_349_p2(0) = '1') else 
        agg_result_V_buf_1_3_i_fu_341_p3;
    agg_result_V_buf_1_5_i_fu_389_p3 <= 
        tmp_138_fu_379_p4 when (tmp_2_5_i_fu_373_p2(0) = '1') else 
        agg_result_V_buf_1_4_i_fu_365_p3;
    agg_result_V_buf_1_6_i_fu_413_p3 <= 
        tmp_139_fu_403_p4 when (tmp_2_6_i_fu_397_p2(0) = '1') else 
        agg_result_V_buf_1_5_i_fu_389_p3;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_cseq_ST_st0_fsm1_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st0_fsm1_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_59, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_tmp_2_reg_143pp0_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    -- ap_sig_bdd_23 assign process. --
    ap_sig_bdd_23_assign_proc : process(ap_CS_fsm0)
    begin
                ap_sig_bdd_23 <= (ap_CS_fsm0(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_34 assign process. --
    ap_sig_bdd_34_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_34 <= (ap_const_lv1_1 = ap_CS_fsm1(0 downto 0));
    end process;


    -- ap_sig_bdd_397 assign process. --
    ap_sig_bdd_397_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, tmp_nbreadreq_fu_122_p3, ap_sig_bdd_59, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1)
    begin
                ap_sig_bdd_397 <= ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)))));
    end process;


    -- ap_sig_bdd_400 assign process. --
    ap_sig_bdd_400_assign_proc : process(cl_drop, cond_fu_175_p2, tmp_s_fu_207_p2, grp_fu_159_p3)
    begin
                ap_sig_bdd_400 <= ((cl_drop = ap_const_lv1_0) and (ap_const_lv1_0 = cond_fu_175_p2) and (ap_const_lv1_0 = tmp_s_fu_207_p2) and (ap_const_lv1_0 = grp_fu_159_p3));
    end process;


    -- ap_sig_bdd_402 assign process. --
    ap_sig_bdd_402_assign_proc : process(cl_drop, grp_fu_159_p3)
    begin
                ap_sig_bdd_402 <= (not((cl_drop = ap_const_lv1_0)) and not((ap_const_lv1_0 = grp_fu_159_p3)));
    end process;


    -- ap_sig_bdd_59 assign process. --
    ap_sig_bdd_59_assign_proc : process(ap_start, ap_done_reg, ipDataDropFifo_V_empty_n, tmp_nbreadreq_fu_122_p3, cl_drop)
    begin
                ap_sig_bdd_59 <= (((ipDataDropFifo_V_empty_n = ap_const_logic_0) and (cl_drop = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3))) or ((ipDataDropFifo_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and not((cl_drop = ap_const_lv1_0))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_74 assign process. --
    ap_sig_bdd_74_assign_proc : process(ipDataCutFifo_V_full_n, cl_drop_load_reg_536, tmp_reg_540)
    begin
                ap_sig_bdd_74 <= ((ipDataCutFifo_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = cl_drop_load_reg_536) and not((ap_const_lv1_0 = tmp_reg_540)));
    end process;


    -- ap_sig_bdd_80 assign process. --
    ap_sig_bdd_80_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_80 <= (ap_const_lv1_1 = ap_CS_fsm1(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_st0_fsm1_0 assign process. --
    ap_sig_cseq_ST_st0_fsm1_0_assign_proc : process(ap_sig_bdd_34)
    begin
        if (ap_sig_bdd_34) then 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm0_0 assign process. --
    ap_sig_cseq_ST_st1_fsm0_0_assign_proc : process(ap_sig_bdd_23)
    begin
        if (ap_sig_bdd_23) then 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm1_1 assign process. --
    ap_sig_cseq_ST_st2_fsm1_1_assign_proc : process(ap_sig_bdd_80)
    begin
        if (ap_sig_bdd_80) then 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_0;
        end if; 
    end process;

    cond_fu_175_p2 <= "1" when (cl_wordCount_V = ap_const_lv16_0) else "0";
    grp_fu_159_p3 <= ipDataDropFifo_V_dout(72 downto 72);
    icmp5_fu_323_p2 <= "0" when (tmp_135_fu_313_p4 = ap_const_lv2_0) else "1";
    icmp_fu_261_p2 <= "0" when (tmp_134_fu_251_p4 = ap_const_lv3_0) else "1";
    ipDataCutFifo_V_din <= tmp_2_reg_143;

    -- ipDataCutFifo_V_write assign process. --
    ipDataCutFifo_V_write_assign_proc : process(ap_done_reg, cl_drop_load_reg_536, tmp_reg_540, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1)
    begin
        if (((ap_const_lv1_0 = cl_drop_load_reg_536) and not((ap_const_lv1_0 = tmp_reg_540)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74)))) then 
            ipDataCutFifo_V_write <= ap_const_logic_1;
        else 
            ipDataCutFifo_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- ipDataDropFifo_V_read assign process. --
    ipDataDropFifo_V_read_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, tmp_nbreadreq_fu_122_p3, ap_sig_bdd_59, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1, cl_drop)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (cl_drop = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and not((cl_drop = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_59 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))))) then 
            ipDataDropFifo_V_read <= ap_const_logic_1;
        else 
            ipDataDropFifo_V_read <= ap_const_logic_0;
        end if; 
    end process;

    leftLength_V_fu_235_p2 <= std_logic_vector(unsigned(tmp_133_fu_231_p1) - unsigned(tmp_32_fu_223_p3));
    lhs_V_cast_fu_185_p1 <= std_logic_vector(resize(unsigned(cl_wordCount_V),17));
    not_tmp_2_i_fu_241_p2 <= "0" when (tmp_133_fu_231_p1 = tmp_32_fu_223_p3) else "1";
    p_Result_2_i_fu_478_p4 <= ipDataDropFifo_V_dout(23 downto 16);
    p_Result_3_i_fu_337_p1 <= std_logic_vector(resize(unsigned(tmp_136_fu_329_p3),8));
    p_Result_i_fu_468_p4 <= ipDataDropFifo_V_dout(31 downto 24);
    p_cast_i_cast_fu_247_p1 <= std_logic_vector(resize(unsigned(not_tmp_2_i_fu_241_p2),2));
    p_tmp_s_fu_516_p3 <= 
        ap_const_lv16_0 when (tmp_last_V_fu_502_p3(0) = '1') else 
        tmp_34_fu_510_p2;
    r_V_1_fu_195_p3 <= (r_V_fu_189_p2 & ap_const_lv3_0);
    r_V_fu_189_p2 <= std_logic_vector(unsigned(lhs_V_cast_fu_185_p1) + unsigned(ap_const_lv17_1));
    tmp_10_fu_293_p3 <= (ap_const_lv1_1 & agg_result_V_buf_1_1_i_fu_275_p3);
    tmp_132_fu_219_p1 <= cl_wordCount_V(1 - 1 downto 0);
    tmp_133_fu_231_p1 <= cl_totalLength_V(4 - 1 downto 0);
    tmp_134_fu_251_p4 <= leftLength_V_fu_235_p2(3 downto 1);
    tmp_135_fu_313_p4 <= leftLength_V_fu_235_p2(3 downto 2);
    tmp_136_fu_329_p3 <= (ap_const_lv1_1 & agg_result_V_buf_1_2_i_fu_301_p3);
    
    tmp_137_fu_355_p4_proc : process(agg_result_V_buf_1_3_i_fu_341_p3)
    begin
        tmp_137_fu_355_p4 <= agg_result_V_buf_1_3_i_fu_341_p3;
        tmp_137_fu_355_p4(4) <= ap_const_lv1_1(0);
    end process;

    
    tmp_138_fu_379_p4_proc : process(agg_result_V_buf_1_4_i_fu_365_p3)
    begin
        tmp_138_fu_379_p4 <= agg_result_V_buf_1_4_i_fu_365_p3;
        tmp_138_fu_379_p4(5) <= ap_const_lv1_1(0);
    end process;

    
    tmp_139_fu_403_p4_proc : process(agg_result_V_buf_1_5_i_fu_389_p3)
    begin
        tmp_139_fu_403_p4 <= agg_result_V_buf_1_5_i_fu_389_p3;
        tmp_139_fu_403_p4(6) <= ap_const_lv1_1(0);
    end process;

    tmp_140_fu_421_p3 <= leftLength_V_fu_235_p2(3 downto 3);
    
    tmp_141_fu_429_p4_proc : process(agg_result_V_buf_1_6_i_fu_413_p3)
    begin
        tmp_141_fu_429_p4 <= agg_result_V_buf_1_6_i_fu_413_p3;
        tmp_141_fu_429_p4(7) <= ap_const_lv1_1(0);
    end process;

    tmp_1_3_fu_455_p5 <= (tmp_33_fu_447_p3 & ipDataDropFifo_V_dout(63 downto 0));
    tmp_2_2_i_fu_287_p2 <= "1" when (unsigned(leftLength_V_fu_235_p2) > unsigned(ap_const_lv4_2)) else "0";
    tmp_2_4_i_fu_349_p2 <= "1" when (unsigned(leftLength_V_fu_235_p2) > unsigned(ap_const_lv4_4)) else "0";
    tmp_2_5_i_fu_373_p2 <= "1" when (unsigned(leftLength_V_fu_235_p2) > unsigned(ap_const_lv4_5)) else "0";
    tmp_2_6_i_fu_397_p2 <= "1" when (unsigned(leftLength_V_fu_235_p2) > unsigned(ap_const_lv4_6)) else "0";

    -- tmp_2_phi_fu_147_p6 assign process. --
    tmp_2_phi_fu_147_p6_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ipDataDropFifo_V_dout, tmp_nbreadreq_fu_122_p3, cl_drop, cond_fu_175_p2, tmp_s_fu_207_p2, ap_reg_phiprechg_tmp_2_reg_143pp0_it0, tmp_1_3_fu_455_p5)
    begin
        if (((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (cl_drop = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and (ap_const_lv1_0 = cond_fu_175_p2) and (ap_const_lv1_0 = tmp_s_fu_207_p2))) then 
            tmp_2_phi_fu_147_p6 <= tmp_1_3_fu_455_p5;
        elsif ((((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (cl_drop = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and not((ap_const_lv1_0 = cond_fu_175_p2))) or ((ap_const_logic_1 = ap_start) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (cl_drop = ap_const_lv1_0) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_122_p3)) and (ap_const_lv1_0 = cond_fu_175_p2) and not((ap_const_lv1_0 = tmp_s_fu_207_p2))))) then 
            tmp_2_phi_fu_147_p6 <= ipDataDropFifo_V_dout;
        else 
            tmp_2_phi_fu_147_p6 <= ap_reg_phiprechg_tmp_2_reg_143pp0_it0;
        end if; 
    end process;

    tmp_32_fu_223_p3 <= (tmp_132_fu_219_p1 & ap_const_lv3_0);
    tmp_33_fu_447_p3 <= (ap_const_lv1_1 & tmp_keep_V_fu_439_p3);
    tmp_34_fu_510_p2 <= std_logic_vector(unsigned(cl_wordCount_V) + unsigned(ap_const_lv16_1));
    tmp_9_fu_267_p3 <= (ap_const_lv1_1 & not_tmp_2_i_fu_241_p2);
    tmp_cast_fu_203_p1 <= std_logic_vector(resize(unsigned(cl_totalLength_V),20));
    tmp_i_fu_488_p3 <= (p_Result_2_i_fu_478_p4 & p_Result_i_fu_468_p4);
    tmp_keep_V_fu_439_p3 <= 
        tmp_141_fu_429_p4 when (tmp_140_fu_421_p3(0) = '1') else 
        agg_result_V_buf_1_6_i_fu_413_p3;
    tmp_last_V_fu_502_p3 <= tmp_2_phi_fu_147_p6(72 downto 72);
    tmp_nbreadreq_fu_122_p3 <= (0=>ipDataDropFifo_V_empty_n, others=>'-');
    tmp_s_fu_207_p2 <= "1" when (unsigned(r_V_1_fu_195_p3) < unsigned(tmp_cast_fu_203_p1)) else "0";
end behav;
