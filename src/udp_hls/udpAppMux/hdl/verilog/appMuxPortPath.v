// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module appMuxPortPath (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        txRequestPortNetwork_din,
        txRequestPortNetwork_full_n,
        txRequestPortNetwork_write,
        rxReplyPortNetwork_V_dout,
        rxReplyPortNetwork_V_empty_n,
        rxReplyPortNetwork_V_read,
        rxRequestPortFAST_V_s_dout,
        rxRequestPortFAST_V_s_empty_n,
        rxRequestPortFAST_V_s_read,
        txReplyPortFAST_V_din,
        txReplyPortFAST_V_full_n,
        txReplyPortFAST_V_write,
        rxRequestPortMonitor_dout,
        rxRequestPortMonitor_empty_n,
        rxRequestPortMonitor_read,
        txReplyPortMonitor_V_din,
        txReplyPortMonitor_V_full_n,
        txReplyPortMonitor_V_write
);

parameter    ap_ST_fsm_state1 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [15:0] txRequestPortNetwork_din;
input   txRequestPortNetwork_full_n;
output   txRequestPortNetwork_write;
input   rxReplyPortNetwork_V_dout;
input   rxReplyPortNetwork_V_empty_n;
output   rxReplyPortNetwork_V_read;
input  [15:0] rxRequestPortFAST_V_s_dout;
input   rxRequestPortFAST_V_s_empty_n;
output   rxRequestPortFAST_V_s_read;
output   txReplyPortFAST_V_din;
input   txReplyPortFAST_V_full_n;
output   txReplyPortFAST_V_write;
input  [15:0] rxRequestPortMonitor_dout;
input   rxRequestPortMonitor_empty_n;
output   rxRequestPortMonitor_read;
output   txReplyPortMonitor_V_din;
input   txReplyPortMonitor_V_full_n;
output   txReplyPortMonitor_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] txRequestPortNetwork_din;
reg txRequestPortNetwork_write;
reg rxReplyPortNetwork_V_read;
reg rxRequestPortFAST_V_s_read;
reg txReplyPortFAST_V_write;
reg rxRequestPortMonitor_read;
reg txReplyPortMonitor_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [0:0] shimStatePort;
reg   [0:0] rrport_V;
reg    txRequestPortNetwork_blk_n;
wire   [0:0] tmp_1_nbwritereq_fu_70_p3;
wire   [0:0] tmp_18_nbreadreq_fu_78_p3;
wire   [0:0] tmp_17_nbreadreq_fu_100_p3;
reg    rxReplyPortNetwork_V_blk_n;
wire   [0:0] tmp_nbreadreq_fu_115_p3;
wire   [0:0] tmp_16_nbwritereq_fu_123_p3;
wire   [0:0] tmp_15_nbwritereq_fu_145_p3;
reg    rxRequestPortFAST_V_s_blk_n;
reg    txReplyPortFAST_V_blk_n;
reg    rxRequestPortMonitor_blk_n;
reg    txReplyPortMonitor_V_blk_n;
reg    ap_condition_126;
reg   [0:0] ap_NS_fsm;
reg    ap_condition_148;
reg    ap_condition_152;
reg    ap_condition_172;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'b1;
#0 shimStatePort = 1'b0;
#0 rrport_V = 1'b0;
end

always @ (posedge ap_rst or posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_rst or posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_126 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_rst or posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        rrport_V <= 1'b0;
    end else begin
        if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_126 == 1'b1))) begin
            if ((ap_condition_152 == 1'b1)) begin
                rrport_V <= 1'b0;
            end else if ((ap_condition_148 == 1'b1)) begin
                rrport_V <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_rst or posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        shimStatePort <= 1'b0;
    end else begin
        if ((((ap_CS_fsm_state1 == 1'b1) & (1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_16_nbwritereq_fu_123_p3) & ~(ap_condition_126 == 1'b1)) | ((ap_CS_fsm_state1 == 1'b1) & ~(1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_15_nbwritereq_fu_145_p3) & ~(ap_condition_126 == 1'b1)))) begin
            shimStatePort <= 1'b0;
        end else if ((((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & (1'b0 == rrport_V) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == tmp_18_nbreadreq_fu_78_p3) & ~(ap_condition_126 == 1'b1)) | ((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == rrport_V) & ~(1'b0 == tmp_17_nbreadreq_fu_100_p3) & ~(ap_condition_126 == 1'b1)))) begin
            shimStatePort <= 1'b1;
        end
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_126 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_126 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & (1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_16_nbwritereq_fu_123_p3)) | ((ap_CS_fsm_state1 == 1'b1) & ~(1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_15_nbwritereq_fu_145_p3)))) begin
        rxReplyPortNetwork_V_blk_n = rxReplyPortNetwork_V_empty_n;
    end else begin
        rxReplyPortNetwork_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & (1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_16_nbwritereq_fu_123_p3) & ~(ap_condition_126 == 1'b1)) | ((ap_CS_fsm_state1 == 1'b1) & ~(1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_15_nbwritereq_fu_145_p3) & ~(ap_condition_126 == 1'b1)))) begin
        rxReplyPortNetwork_V_read = 1'b1;
    end else begin
        rxReplyPortNetwork_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & (1'b0 == rrport_V) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == tmp_18_nbreadreq_fu_78_p3))) begin
        rxRequestPortFAST_V_s_blk_n = rxRequestPortFAST_V_s_empty_n;
    end else begin
        rxRequestPortFAST_V_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & (1'b0 == rrport_V) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == tmp_18_nbreadreq_fu_78_p3) & ~(ap_condition_126 == 1'b1))) begin
        rxRequestPortFAST_V_s_read = 1'b1;
    end else begin
        rxRequestPortFAST_V_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == rrport_V) & ~(1'b0 == tmp_17_nbreadreq_fu_100_p3))) begin
        rxRequestPortMonitor_blk_n = rxRequestPortMonitor_empty_n;
    end else begin
        rxRequestPortMonitor_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == rrport_V) & ~(1'b0 == tmp_17_nbreadreq_fu_100_p3) & ~(ap_condition_126 == 1'b1))) begin
        rxRequestPortMonitor_read = 1'b1;
    end else begin
        rxRequestPortMonitor_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & (1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_16_nbwritereq_fu_123_p3))) begin
        txReplyPortFAST_V_blk_n = txReplyPortFAST_V_full_n;
    end else begin
        txReplyPortFAST_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & (1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_16_nbwritereq_fu_123_p3) & ~(ap_condition_126 == 1'b1))) begin
        txReplyPortFAST_V_write = 1'b1;
    end else begin
        txReplyPortFAST_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_15_nbwritereq_fu_145_p3))) begin
        txReplyPortMonitor_V_blk_n = txReplyPortMonitor_V_full_n;
    end else begin
        txReplyPortMonitor_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_15_nbwritereq_fu_145_p3) & ~(ap_condition_126 == 1'b1))) begin
        txReplyPortMonitor_V_write = 1'b1;
    end else begin
        txReplyPortMonitor_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & (1'b0 == rrport_V) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == tmp_18_nbreadreq_fu_78_p3)) | ((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == rrport_V) & ~(1'b0 == tmp_17_nbreadreq_fu_100_p3)))) begin
        txRequestPortNetwork_blk_n = txRequestPortNetwork_full_n;
    end else begin
        txRequestPortNetwork_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((ap_condition_172 == 1'b1)) begin
        if ((~(1'b0 == rrport_V) & ~(1'b0 == tmp_17_nbreadreq_fu_100_p3))) begin
            txRequestPortNetwork_din = rxRequestPortMonitor_dout;
        end else if (((1'b0 == rrport_V) & ~(1'b0 == tmp_18_nbreadreq_fu_78_p3))) begin
            txRequestPortNetwork_din = rxRequestPortFAST_V_s_dout;
        end else begin
            txRequestPortNetwork_din = 'bx;
        end
    end else begin
        txRequestPortNetwork_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & (1'b0 == rrport_V) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == tmp_18_nbreadreq_fu_78_p3) & ~(ap_condition_126 == 1'b1)) | ((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == rrport_V) & ~(1'b0 == tmp_17_nbreadreq_fu_100_p3) & ~(ap_condition_126 == 1'b1)))) begin
        txRequestPortNetwork_write = 1'b1;
    end else begin
        txRequestPortNetwork_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

always @ (*) begin
    ap_condition_126 = (((1'b0 == shimStatePort) & (1'b0 == rrport_V) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == tmp_18_nbreadreq_fu_78_p3) & (rxRequestPortFAST_V_s_empty_n == 1'b0)) | ((1'b0 == shimStatePort) & (1'b0 == rrport_V) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == tmp_18_nbreadreq_fu_78_p3) & (txRequestPortNetwork_full_n == 1'b0)) | ((1'b0 == shimStatePort) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == rrport_V) & ~(1'b0 == tmp_17_nbreadreq_fu_100_p3) & (rxRequestPortMonitor_empty_n == 1'b0)) | ((1'b0 == shimStatePort) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == rrport_V) & ~(1'b0 == tmp_17_nbreadreq_fu_100_p3) & (txRequestPortNetwork_full_n == 1'b0)) | ((1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_16_nbwritereq_fu_123_p3) & (rxReplyPortNetwork_V_empty_n == 1'b0)) | ((1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_16_nbwritereq_fu_123_p3) & (txReplyPortFAST_V_full_n == 1'b0)) | (~(1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_15_nbwritereq_fu_145_p3) & (rxReplyPortNetwork_V_empty_n == 1'b0)) | (~(1'b0 == rrport_V) & ~(1'b0 == shimStatePort) & ~(1'b0 == tmp_nbreadreq_fu_115_p3) & ~(1'b0 == tmp_15_nbwritereq_fu_145_p3) & (txReplyPortMonitor_V_full_n == 1'b0)) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_condition_148 = (((1'b0 == shimStatePort) & (1'b0 == rrport_V) & (1'b0 == tmp_1_nbwritereq_fu_70_p3)) | ((1'b0 == shimStatePort) & (1'b0 == rrport_V) & (1'b0 == tmp_18_nbreadreq_fu_78_p3)));
end

always @ (*) begin
    ap_condition_152 = (((1'b0 == shimStatePort) & (1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(1'b0 == rrport_V)) | ((1'b0 == shimStatePort) & ~(1'b0 == rrport_V) & (1'b0 == tmp_17_nbreadreq_fu_100_p3)));
end

always @ (*) begin
    ap_condition_172 = ((ap_CS_fsm_state1 == 1'b1) & (1'b0 == shimStatePort) & ~(1'b0 == tmp_1_nbwritereq_fu_70_p3) & ~(ap_condition_126 == 1'b1));
end

assign tmp_15_nbwritereq_fu_145_p3 = txReplyPortMonitor_V_full_n;

assign tmp_16_nbwritereq_fu_123_p3 = txReplyPortFAST_V_full_n;

assign tmp_17_nbreadreq_fu_100_p3 = rxRequestPortMonitor_empty_n;

assign tmp_18_nbreadreq_fu_78_p3 = rxRequestPortFAST_V_s_empty_n;

assign tmp_1_nbwritereq_fu_70_p3 = txRequestPortNetwork_full_n;

assign tmp_nbreadreq_fu_115_p3 = rxReplyPortNetwork_V_empty_n;

assign txReplyPortFAST_V_din = rxReplyPortNetwork_V_dout;

assign txReplyPortMonitor_V_din = rxReplyPortNetwork_V_dout;

endmodule //appMuxPortPath
