-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mac_ip_encode_compute_ip_checksum is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dataIn_TVALID : IN STD_LOGIC;
    checksumFifo_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    checksumFifo_V_V_full_n : IN STD_LOGIC;
    checksumFifo_V_V_write : OUT STD_LOGIC;
    dataStreamBuffer0_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
    dataStreamBuffer0_V_full_n : IN STD_LOGIC;
    dataStreamBuffer0_V_write : OUT STD_LOGIC;
    dataIn_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    dataIn_TREADY : OUT STD_LOGIC;
    dataIn_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    dataIn_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of mac_ip_encode_compute_ip_checksum is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_pp0_stg0_fsm_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_pp0_stg0_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_20 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC;
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal tmp_nbreadreq_fu_132_p5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_50 : BOOLEAN;
    signal cics_checksumWritten_load_reg_1394 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_state_V_load_reg_1398 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_reg_1402 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_76 : BOOLEAN;
    signal cics_checksumWritten : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal cics_ip_sums_V_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_ip_sums_V_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal cics_ip_sums_V_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_ip_sums_V_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal cics_state_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal cics_wordCount_V : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal cics_ipHeaderLen_V : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal cics_state_V_load_load_fu_305_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_data_V_reg_1406 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_keep_V_reg_1423 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_last_V_reg_1428 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wordCount_V_load_load_fu_351_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal cics_wordCount_V_load_reg_1433 : STD_LOGIC_VECTOR (2 downto 0);
    signal cics_ipHeaderLen_V_load_load_fu_355_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal cics_ipHeaderLen_V_load_reg_1437 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_cics_wordCount_V_flag_fu_370_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cics_wordCount_V_flag_reg_168pp0_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal cics_wordCount_V_flag_phi_fu_171_p12 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_cics_wordCount_V_new_reg_191pp0_it0 : STD_LOGIC_VECTOR (2 downto 0);
    signal cics_wordCount_V_new_phi_fu_194_p12 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_55_fu_656_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_fu_847_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_98_fu_1038_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_72_fu_1328_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_fu_442_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_2_cast_fu_487_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_cast_fu_531_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_8_cast_fu_612_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_4_cast_fu_757_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_7_cast_fu_948_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_6_cast_fu_1139_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_5_cast_fu_1238_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_59_fu_702_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_46_fu_893_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_102_fu_1084_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_76_fu_1374_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_fu_557_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_fu_801_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_94_fu_992_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_85_fu_1183_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_68_fu_1282_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_cics_wordCount_V_new_fu_376_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_215_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_29_fu_360_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal extLd_fu_414_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_9_fu_459_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_24_fu_465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_477_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_25_fu_473_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_27_fu_481_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal extLd1_fu_394_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal extLd2_fu_406_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_fu_497_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_5_fu_509_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_521_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_517_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_525_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_503_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_15_fu_541_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_553_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_fu_549_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_569_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_238_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_fu_572_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_580_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_s_fu_584_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_48_fu_590_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_602_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_fu_598_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_51_fu_606_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_256_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_247_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_2_fu_622_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_2_fu_630_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_42_2_fu_634_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_52_fu_640_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_652_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_53_fu_648_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_274_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_265_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_9_3_fu_668_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_3_fu_676_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_42_3_fu_680_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_56_fu_686_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_698_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_57_fu_694_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_30_fu_714_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_fu_717_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_725_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_4_fu_729_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_31_fu_735_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_747_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_fu_743_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_34_fu_751_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_292_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_283_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_5_1_fu_767_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_1_fu_775_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_1_fu_779_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_35_fu_785_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_797_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_fu_793_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_5_2_fu_813_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_2_fu_821_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_2_fu_825_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_39_fu_831_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_843_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_fu_839_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_5_3_fu_859_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_3_fu_867_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_21_3_fu_871_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_43_fu_877_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_889_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_fu_885_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_86_fu_905_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_8_fu_908_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_18_fu_916_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_20_fu_920_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_87_fu_926_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_89_fu_938_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_88_fu_934_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_90_fu_942_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_17_1_fu_958_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_fu_966_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_37_1_fu_970_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_91_fu_976_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_fu_988_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_92_fu_984_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_17_2_fu_1004_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_fu_1012_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_37_2_fu_1016_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_95_fu_1022_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_fu_1034_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_96_fu_1030_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_17_3_fu_1050_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_3_fu_1058_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_37_3_fu_1062_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_99_fu_1068_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_101_fu_1080_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_100_fu_1076_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_77_fu_1096_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_fu_1099_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_16_fu_1107_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_17_fu_1111_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_78_fu_1117_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_80_fu_1129_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_79_fu_1125_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_81_fu_1133_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_13_1_fu_1149_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_32_1_fu_1157_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_33_1_fu_1161_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_82_fu_1167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_fu_1179_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_83_fu_1175_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_60_fu_1195_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_7_fu_1198_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_1206_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_13_fu_1210_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_61_fu_1216_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_1228_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_62_fu_1224_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_64_fu_1232_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_21_1_fu_1248_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_1_fu_1256_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_1_fu_1260_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_65_fu_1266_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_fu_1278_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_66_fu_1274_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_21_2_fu_1294_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_2_fu_1302_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_2_fu_1306_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_69_fu_1312_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_fu_1324_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_70_fu_1320_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_21_3_fu_1340_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_28_3_fu_1348_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_3_fu_1352_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_73_fu_1358_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_fu_1370_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_74_fu_1366_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_pprstidle_pp0 : STD_LOGIC;
    signal ap_sig_bdd_188 : BOOLEAN;
    signal ap_sig_bdd_63 : BOOLEAN;
    signal ap_sig_bdd_222 : BOOLEAN;
    signal ap_sig_bdd_226 : BOOLEAN;
    signal ap_sig_bdd_192 : BOOLEAN;
    signal ap_sig_bdd_196 : BOOLEAN;
    signal ap_sig_bdd_204 : BOOLEAN;
    signal ap_sig_bdd_232 : BOOLEAN;
    signal ap_sig_bdd_214 : BOOLEAN;
    signal ap_sig_bdd_175 : BOOLEAN;
    signal ap_sig_bdd_912 : BOOLEAN;
    signal ap_sig_bdd_267 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_pp0_stg0_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                end if; 
            end if;
        end if;
    end process;


    -- cics_checksumWritten assign process. --
    cics_checksumWritten_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)) and (cics_ipHeaderLen_V_load_load_fu_355_p1 = ap_const_lv4_4)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)) and (cics_ipHeaderLen_V_load_load_fu_355_p1 = ap_const_lv4_3)))) then 
                cics_checksumWritten <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_checksumWritten = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (cics_state_V_load_load_fu_305_p1 = ap_const_lv2_3))) then 
                cics_checksumWritten <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    -- cics_ipHeaderLen_V assign process. --
    cics_ipHeaderLen_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)) and (cics_ipHeaderLen_V_load_load_fu_355_p1 = ap_const_lv4_4)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)) and (cics_ipHeaderLen_V_load_load_fu_355_p1 = ap_const_lv4_3)))) then 
                cics_ipHeaderLen_V <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1))) then 
                cics_ipHeaderLen_V <= tmp_29_fu_360_p1;
            elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)) and not((cics_ipHeaderLen_V_load_load_fu_355_p1 = ap_const_lv4_4)) and not((cics_ipHeaderLen_V_load_load_fu_355_p1 = ap_const_lv4_3)) and not((ap_const_lv4_0 = cics_ipHeaderLen_V_load_load_fu_355_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and (cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)))) then 
                cics_ipHeaderLen_V <= grp_fu_215_p2;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_0 assign process. --
    cics_ip_sums_V_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_175) then
                if (ap_sig_bdd_214) then 
                    cics_ip_sums_V_0 <= p_5_cast_fu_1238_p1;
                elsif (ap_sig_bdd_232) then 
                    cics_ip_sums_V_0 <= p_6_cast_fu_1139_p1;
                elsif (ap_sig_bdd_204) then 
                    cics_ip_sums_V_0 <= p_7_cast_fu_948_p1;
                elsif (ap_sig_bdd_196) then 
                    cics_ip_sums_V_0 <= p_4_cast_fu_757_p1;
                elsif (ap_sig_bdd_192) then 
                    cics_ip_sums_V_0 <= p_8_cast_fu_612_p1;
                elsif (ap_sig_bdd_226) then 
                    cics_ip_sums_V_0 <= p_cast_fu_531_p1;
                elsif (ap_sig_bdd_222) then 
                    cics_ip_sums_V_0 <= p_2_cast_fu_487_p1;
                elsif (ap_sig_bdd_63) then 
                    cics_ip_sums_V_0 <= p_Val2_s_fu_442_p2;
                elsif (ap_sig_bdd_188) then 
                    cics_ip_sums_V_0 <= ap_const_lv17_0;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_1 assign process. --
    cics_ip_sums_V_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_175) then
                if (ap_sig_bdd_214) then 
                    cics_ip_sums_V_1 <= tmp_68_fu_1282_p2;
                elsif (ap_sig_bdd_232) then 
                    cics_ip_sums_V_1 <= tmp_85_fu_1183_p2;
                elsif (ap_sig_bdd_204) then 
                    cics_ip_sums_V_1 <= tmp_94_fu_992_p2;
                elsif (ap_sig_bdd_196) then 
                    cics_ip_sums_V_1 <= tmp_38_fu_801_p2;
                elsif (ap_sig_bdd_226) then 
                    cics_ip_sums_V_1 <= tmp_23_fu_557_p2;
                elsif (ap_sig_bdd_188) then 
                    cics_ip_sums_V_1 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_2 assign process. --
    cics_ip_sums_V_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_175) then
                if (ap_sig_bdd_214) then 
                    cics_ip_sums_V_2 <= tmp_72_fu_1328_p2;
                elsif (ap_sig_bdd_204) then 
                    cics_ip_sums_V_2 <= tmp_98_fu_1038_p2;
                elsif (ap_sig_bdd_196) then 
                    cics_ip_sums_V_2 <= tmp_42_fu_847_p2;
                elsif (ap_sig_bdd_192) then 
                    cics_ip_sums_V_2 <= tmp_55_fu_656_p2;
                elsif (ap_sig_bdd_188) then 
                    cics_ip_sums_V_2 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    -- cics_ip_sums_V_3 assign process. --
    cics_ip_sums_V_3_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_175) then
                if (ap_sig_bdd_214) then 
                    cics_ip_sums_V_3 <= tmp_76_fu_1374_p2;
                elsif (ap_sig_bdd_204) then 
                    cics_ip_sums_V_3 <= tmp_102_fu_1084_p2;
                elsif (ap_sig_bdd_196) then 
                    cics_ip_sums_V_3 <= tmp_46_fu_893_p2;
                elsif (ap_sig_bdd_192) then 
                    cics_ip_sums_V_3 <= tmp_59_fu_702_p2;
                elsif (ap_sig_bdd_188) then 
                    cics_ip_sums_V_3 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    -- cics_state_V assign process. --
    cics_state_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_912) then
                if ((ap_const_lv2_0 = cics_state_V_load_load_fu_305_p1)) then 
                    cics_state_V <= ap_const_lv2_1;
                elsif ((cics_state_V_load_load_fu_305_p1 = ap_const_lv2_1)) then 
                    cics_state_V <= ap_const_lv2_2;
                elsif ((ap_const_lv2_2 = cics_state_V_load_load_fu_305_p1)) then 
                    cics_state_V <= ap_const_lv2_3;
                elsif ((cics_state_V_load_load_fu_305_p1 = ap_const_lv2_3)) then 
                    cics_state_V <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                cics_checksumWritten_load_reg_1394 <= cics_checksumWritten;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                cics_ipHeaderLen_V_load_reg_1437 <= cics_ipHeaderLen_V;
                cics_wordCount_V_load_reg_1433 <= cics_wordCount_V;
                tmp_data_V_reg_1406 <= dataIn_TDATA;
                tmp_keep_V_reg_1423 <= dataIn_TKEEP;
                tmp_last_V_reg_1428 <= dataIn_TLAST;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (cics_checksumWritten = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                cics_state_V_load_reg_1398 <= cics_state_V;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))) and not((ap_const_lv1_0 = p_cics_wordCount_V_flag_fu_370_p2)))) then
                cics_wordCount_V <= p_cics_wordCount_V_new_fu_376_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((cics_checksumWritten = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then
                tmp_reg_1402 <= tmp_nbreadreq_fu_132_p5;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_done_reg, ap_CS_fsm, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_50, ap_sig_bdd_76, ap_sig_pprstidle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_pp0_stg0_fsm_0 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_50, ap_sig_bdd_76)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_reg_ppiten_pp0_it1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_50, ap_sig_bdd_76)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_cics_wordCount_V_flag_reg_168pp0_it0 <= "X";
    ap_reg_phiprechg_cics_wordCount_V_new_reg_191pp0_it0 <= "XXX";
    ap_reg_ppiten_pp0_it0 <= ap_start;

    -- ap_sig_bdd_175 assign process. --
    ap_sig_bdd_175_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_50, ap_sig_bdd_76)
    begin
                ap_sig_bdd_175 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_bdd_188 assign process. --
    ap_sig_bdd_188_assign_proc : process(cics_checksumWritten_load_reg_1394, cics_state_V_load_reg_1398)
    begin
                ap_sig_bdd_188 <= ((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394) and (cics_state_V_load_reg_1398 = ap_const_lv2_3));
    end process;


    -- ap_sig_bdd_192 assign process. --
    ap_sig_bdd_192_assign_proc : process(cics_checksumWritten_load_reg_1394, tmp_reg_1402, cics_wordCount_V_load_reg_1433)
    begin
                ap_sig_bdd_192 <= (not((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394)) and not((ap_const_lv1_0 = tmp_reg_1402)) and (cics_wordCount_V_load_reg_1433 = ap_const_lv3_1));
    end process;


    -- ap_sig_bdd_196 assign process. --
    ap_sig_bdd_196_assign_proc : process(cics_checksumWritten_load_reg_1394, tmp_reg_1402, cics_wordCount_V_load_reg_1433)
    begin
                ap_sig_bdd_196 <= (not((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394)) and not((ap_const_lv1_0 = tmp_reg_1402)) and (ap_const_lv3_0 = cics_wordCount_V_load_reg_1433));
    end process;


    -- ap_sig_bdd_20 assign process. --
    ap_sig_bdd_20_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_20 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_204 assign process. --
    ap_sig_bdd_204_assign_proc : process(cics_checksumWritten_load_reg_1394, tmp_reg_1402, cics_wordCount_V_load_reg_1433, cics_ipHeaderLen_V_load_reg_1437)
    begin
                ap_sig_bdd_204 <= (not((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394)) and not((ap_const_lv1_0 = tmp_reg_1402)) and not((cics_wordCount_V_load_reg_1433 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_reg_1433)) and (cics_ipHeaderLen_V_load_reg_1437 = ap_const_lv4_4));
    end process;


    -- ap_sig_bdd_214 assign process. --
    ap_sig_bdd_214_assign_proc : process(cics_checksumWritten_load_reg_1394, tmp_reg_1402, cics_wordCount_V_load_reg_1433, cics_ipHeaderLen_V_load_reg_1437)
    begin
                ap_sig_bdd_214 <= (not((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394)) and not((ap_const_lv1_0 = tmp_reg_1402)) and not((cics_wordCount_V_load_reg_1433 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_reg_1433)) and not((cics_ipHeaderLen_V_load_reg_1437 = ap_const_lv4_4)) and not((cics_ipHeaderLen_V_load_reg_1437 = ap_const_lv4_3)) and not((ap_const_lv4_0 = cics_ipHeaderLen_V_load_reg_1437)));
    end process;


    -- ap_sig_bdd_222 assign process. --
    ap_sig_bdd_222_assign_proc : process(cics_checksumWritten_load_reg_1394, cics_state_V_load_reg_1398)
    begin
                ap_sig_bdd_222 <= ((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394) and (cics_state_V_load_reg_1398 = ap_const_lv2_1));
    end process;


    -- ap_sig_bdd_226 assign process. --
    ap_sig_bdd_226_assign_proc : process(cics_checksumWritten_load_reg_1394, cics_state_V_load_reg_1398)
    begin
                ap_sig_bdd_226 <= ((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394) and (cics_state_V_load_reg_1398 = ap_const_lv2_0));
    end process;


    -- ap_sig_bdd_232 assign process. --
    ap_sig_bdd_232_assign_proc : process(cics_checksumWritten_load_reg_1394, tmp_reg_1402, cics_wordCount_V_load_reg_1433, cics_ipHeaderLen_V_load_reg_1437)
    begin
                ap_sig_bdd_232 <= (not((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394)) and not((ap_const_lv1_0 = tmp_reg_1402)) and not((cics_wordCount_V_load_reg_1433 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_reg_1433)) and (cics_ipHeaderLen_V_load_reg_1437 = ap_const_lv4_3));
    end process;


    -- ap_sig_bdd_267 assign process. --
    ap_sig_bdd_267_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, tmp_nbreadreq_fu_132_p5, cics_checksumWritten)
    begin
                ap_sig_bdd_267 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)));
    end process;


    -- ap_sig_bdd_50 assign process. --
    ap_sig_bdd_50_assign_proc : process(ap_start, ap_done_reg, dataIn_TVALID, tmp_nbreadreq_fu_132_p5, cics_checksumWritten)
    begin
                ap_sig_bdd_50 <= (((dataIn_TVALID = ap_const_logic_0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_63 assign process. --
    ap_sig_bdd_63_assign_proc : process(cics_checksumWritten_load_reg_1394, cics_state_V_load_reg_1398)
    begin
                ap_sig_bdd_63 <= ((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394) and (cics_state_V_load_reg_1398 = ap_const_lv2_2));
    end process;


    -- ap_sig_bdd_76 assign process. --
    ap_sig_bdd_76_assign_proc : process(checksumFifo_V_V_full_n, cics_checksumWritten_load_reg_1394, cics_state_V_load_reg_1398, dataStreamBuffer0_V_full_n, tmp_reg_1402)
    begin
                ap_sig_bdd_76 <= (((checksumFifo_V_V_full_n = ap_const_logic_0) and (ap_const_lv1_0 = cics_checksumWritten_load_reg_1394) and (cics_state_V_load_reg_1398 = ap_const_lv2_2)) or ((dataStreamBuffer0_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394)) and not((ap_const_lv1_0 = tmp_reg_1402))));
    end process;


    -- ap_sig_bdd_912 assign process. --
    ap_sig_bdd_912_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_50, ap_sig_bdd_76, cics_checksumWritten)
    begin
                ap_sig_bdd_912 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and (cics_checksumWritten = ap_const_lv1_0) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_0 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_0_assign_proc : process(ap_sig_bdd_20)
    begin
        if (ap_sig_bdd_20) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_pprstidle_pp0 assign process. --
    ap_sig_pprstidle_pp0_assign_proc : process(ap_start, ap_reg_ppiten_pp0_it0)
    begin
        if (((ap_const_logic_0 = ap_reg_ppiten_pp0_it0) and (ap_const_logic_0 = ap_start))) then 
            ap_sig_pprstidle_pp0 <= ap_const_logic_1;
        else 
            ap_sig_pprstidle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    checksumFifo_V_V_din <= p_Val2_s_fu_442_p2(16 - 1 downto 0);

    -- checksumFifo_V_V_write assign process. --
    checksumFifo_V_V_write_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_50, cics_checksumWritten_load_reg_1394, cics_state_V_load_reg_1398, ap_sig_bdd_76)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_lv1_0 = cics_checksumWritten_load_reg_1394) and (cics_state_V_load_reg_1398 = ap_const_lv2_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            checksumFifo_V_V_write <= ap_const_logic_1;
        else 
            checksumFifo_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    cics_ipHeaderLen_V_load_load_fu_355_p1 <= cics_ipHeaderLen_V;
    cics_state_V_load_load_fu_305_p1 <= cics_state_V;

    -- cics_wordCount_V_flag_phi_fu_171_p12 assign process. --
    cics_wordCount_V_flag_phi_fu_171_p12_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, tmp_nbreadreq_fu_132_p5, cics_checksumWritten, cics_wordCount_V_load_load_fu_351_p1, cics_ipHeaderLen_V_load_load_fu_355_p1, ap_reg_phiprechg_cics_wordCount_V_flag_reg_168pp0_it0)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and (cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and (ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)))) then 
            cics_wordCount_V_flag_phi_fu_171_p12 <= ap_const_lv1_1;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not((cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)) and not((cics_ipHeaderLen_V_load_load_fu_355_p1 = ap_const_lv4_4)) and not((cics_ipHeaderLen_V_load_load_fu_355_p1 = ap_const_lv4_3)) and not((ap_const_lv4_0 = cics_ipHeaderLen_V_load_load_fu_355_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not((cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)) and (cics_ipHeaderLen_V_load_load_fu_355_p1 = ap_const_lv4_4)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not((cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)) and (cics_ipHeaderLen_V_load_load_fu_355_p1 = ap_const_lv4_3)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not((cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) and not((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)) and (ap_const_lv4_0 = cics_ipHeaderLen_V_load_load_fu_355_p1)))) then 
            cics_wordCount_V_flag_phi_fu_171_p12 <= ap_const_lv1_0;
        else 
            cics_wordCount_V_flag_phi_fu_171_p12 <= ap_reg_phiprechg_cics_wordCount_V_flag_reg_168pp0_it0;
        end if; 
    end process;

    cics_wordCount_V_load_load_fu_351_p1 <= cics_wordCount_V;

    -- cics_wordCount_V_new_phi_fu_194_p12 assign process. --
    cics_wordCount_V_new_phi_fu_194_p12_assign_proc : process(cics_wordCount_V_load_load_fu_351_p1, ap_reg_phiprechg_cics_wordCount_V_new_reg_191pp0_it0, ap_sig_bdd_267)
    begin
        if (ap_sig_bdd_267) then
            if ((ap_const_lv3_0 = cics_wordCount_V_load_load_fu_351_p1)) then 
                cics_wordCount_V_new_phi_fu_194_p12 <= ap_const_lv3_1;
            elsif ((cics_wordCount_V_load_load_fu_351_p1 = ap_const_lv3_1)) then 
                cics_wordCount_V_new_phi_fu_194_p12 <= ap_const_lv3_2;
            else 
                cics_wordCount_V_new_phi_fu_194_p12 <= ap_reg_phiprechg_cics_wordCount_V_new_reg_191pp0_it0;
            end if;
        else 
            cics_wordCount_V_new_phi_fu_194_p12 <= ap_reg_phiprechg_cics_wordCount_V_new_reg_191pp0_it0;
        end if; 
    end process;


    -- dataIn_TREADY assign process. --
    dataIn_TREADY_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, tmp_nbreadreq_fu_132_p5, ap_sig_bdd_50, ap_sig_bdd_76, cics_checksumWritten)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not((cics_checksumWritten = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_nbreadreq_fu_132_p5)) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1))))))) then 
            dataIn_TREADY <= ap_const_logic_1;
        else 
            dataIn_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    dataStreamBuffer0_V_din <= ((tmp_last_V_reg_1428 & tmp_keep_V_reg_1423) & tmp_data_V_reg_1406);

    -- dataStreamBuffer0_V_write assign process. --
    dataStreamBuffer0_V_write_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_pp0_stg0_fsm_0, ap_reg_ppiten_pp0_it0, ap_reg_ppiten_pp0_it1, ap_sig_bdd_50, cics_checksumWritten_load_reg_1394, tmp_reg_1402, ap_sig_bdd_76)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_0) and not((ap_const_lv1_0 = cics_checksumWritten_load_reg_1394)) and not((ap_const_lv1_0 = tmp_reg_1402)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_done_reg = ap_const_logic_1) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and ap_sig_bdd_50) or (ap_sig_bdd_76 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1)))))) then 
            dataStreamBuffer0_V_write <= ap_const_logic_1;
        else 
            dataStreamBuffer0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    extLd1_fu_394_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_2),17));
    extLd2_fu_406_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_3),17));
    extLd_fu_414_p1 <= std_logic_vector(resize(unsigned(cics_ip_sums_V_1),17));
    grp_fu_215_p2 <= std_logic_vector(signed(ap_const_lv4_E) + signed(cics_ipHeaderLen_V));
    grp_fu_238_p4 <= tmp_data_V_reg_1406(15 downto 8);
    grp_fu_247_p4 <= tmp_data_V_reg_1406(47 downto 40);
    grp_fu_256_p4 <= tmp_data_V_reg_1406(39 downto 32);
    grp_fu_265_p4 <= tmp_data_V_reg_1406(63 downto 56);
    grp_fu_274_p4 <= tmp_data_V_reg_1406(55 downto 48);
    grp_fu_283_p4 <= tmp_data_V_reg_1406(31 downto 24);
    grp_fu_292_p4 <= tmp_data_V_reg_1406(23 downto 16);
    p_2_cast_fu_487_p1 <= std_logic_vector(resize(unsigned(tmp_27_fu_481_p2),17));
    p_4_cast_fu_757_p1 <= std_logic_vector(resize(unsigned(tmp_34_fu_751_p2),17));
    p_5_cast_fu_1238_p1 <= std_logic_vector(resize(unsigned(tmp_64_fu_1232_p2),17));
    p_6_cast_fu_1139_p1 <= std_logic_vector(resize(unsigned(tmp_81_fu_1133_p2),17));
    p_7_cast_fu_948_p1 <= std_logic_vector(resize(unsigned(tmp_90_fu_942_p2),17));
    p_8_cast_fu_612_p1 <= std_logic_vector(resize(unsigned(tmp_51_fu_606_p2),17));
    p_Result_13_1_fu_1149_p3 <= (grp_fu_292_p4 & grp_fu_283_p4);
    p_Result_17_1_fu_958_p3 <= (grp_fu_292_p4 & grp_fu_283_p4);
    p_Result_17_2_fu_1004_p3 <= (grp_fu_256_p4 & grp_fu_247_p4);
    p_Result_17_3_fu_1050_p3 <= (grp_fu_274_p4 & grp_fu_265_p4);
    p_Result_21_1_fu_1248_p3 <= (grp_fu_292_p4 & grp_fu_283_p4);
    p_Result_21_2_fu_1294_p3 <= (grp_fu_256_p4 & grp_fu_247_p4);
    p_Result_21_3_fu_1340_p3 <= (grp_fu_274_p4 & grp_fu_265_p4);
    p_Result_3_fu_1099_p3 <= (tmp_77_fu_1096_p1 & grp_fu_238_p4);
    p_Result_5_1_fu_767_p3 <= (grp_fu_292_p4 & grp_fu_283_p4);
    p_Result_5_2_fu_813_p3 <= (grp_fu_256_p4 & grp_fu_247_p4);
    p_Result_5_3_fu_859_p3 <= (grp_fu_274_p4 & grp_fu_265_p4);
    p_Result_5_fu_717_p3 <= (tmp_30_fu_714_p1 & grp_fu_238_p4);
    p_Result_7_fu_1198_p3 <= (tmp_60_fu_1195_p1 & grp_fu_238_p4);
    p_Result_8_fu_908_p3 <= (tmp_86_fu_905_p1 & grp_fu_238_p4);
    p_Result_9_2_fu_622_p3 <= (grp_fu_256_p4 & grp_fu_247_p4);
    p_Result_9_3_fu_668_p3 <= (grp_fu_274_p4 & grp_fu_265_p4);
    p_Result_9_fu_572_p3 <= (tmp_47_fu_569_p1 & grp_fu_238_p4);
    p_Val2_s_fu_442_p2 <= (cics_ip_sums_V_0 xor ap_const_lv17_1FFFF);
    p_cast_fu_531_p1 <= std_logic_vector(resize(unsigned(tmp_11_fu_525_p2),17));
    p_cics_wordCount_V_flag_fu_370_p2 <= (dataIn_TLAST or cics_wordCount_V_flag_phi_fu_171_p12);
    p_cics_wordCount_V_new_fu_376_p3 <= 
        ap_const_lv3_0 when (dataIn_TLAST(0) = '1') else 
        cics_wordCount_V_new_phi_fu_194_p12;
    tmp_100_fu_1076_p1 <= std_logic_vector(resize(unsigned(tmp_99_fu_1068_p3),16));
    tmp_101_fu_1080_p1 <= tmp_37_3_fu_1062_p2(16 - 1 downto 0);
    tmp_102_fu_1084_p2 <= std_logic_vector(unsigned(tmp_101_fu_1080_p1) + unsigned(tmp_100_fu_1076_p1));
    tmp_11_fu_525_p2 <= std_logic_vector(unsigned(tmp_7_fu_521_p1) + unsigned(tmp_6_fu_517_p1));
    tmp_12_fu_1206_p1 <= std_logic_vector(resize(unsigned(p_Result_7_fu_1198_p3),17));
    tmp_13_fu_1210_p2 <= std_logic_vector(unsigned(tmp_12_fu_1206_p1) + unsigned(cics_ip_sums_V_0));
    tmp_15_fu_541_p3 <= tmp_3_fu_503_p2(16 downto 16);
    tmp_16_fu_1107_p1 <= std_logic_vector(resize(unsigned(p_Result_3_fu_1099_p3),17));
    tmp_17_fu_1111_p2 <= std_logic_vector(unsigned(tmp_16_fu_1107_p1) + unsigned(cics_ip_sums_V_0));
    tmp_18_fu_916_p1 <= std_logic_vector(resize(unsigned(p_Result_8_fu_908_p3),17));
    tmp_19_fu_549_p1 <= std_logic_vector(resize(unsigned(tmp_15_fu_541_p3),16));
    tmp_1_fu_725_p1 <= std_logic_vector(resize(unsigned(p_Result_5_fu_717_p3),17));
    tmp_20_1_fu_775_p1 <= std_logic_vector(resize(unsigned(p_Result_5_1_fu_767_p3),17));
    tmp_20_2_fu_821_p1 <= std_logic_vector(resize(unsigned(p_Result_5_2_fu_813_p3),17));
    tmp_20_3_fu_867_p1 <= std_logic_vector(resize(unsigned(p_Result_5_3_fu_859_p3),17));
    tmp_20_fu_920_p2 <= std_logic_vector(unsigned(tmp_18_fu_916_p1) + unsigned(cics_ip_sums_V_0));
    tmp_21_1_fu_779_p2 <= std_logic_vector(unsigned(tmp_20_1_fu_775_p1) + unsigned(extLd_fu_414_p1));
    tmp_21_2_fu_825_p2 <= std_logic_vector(unsigned(tmp_20_2_fu_821_p1) + unsigned(extLd1_fu_394_p1));
    tmp_21_3_fu_871_p2 <= std_logic_vector(unsigned(tmp_20_3_fu_867_p1) + unsigned(extLd2_fu_406_p1));
    tmp_22_fu_553_p1 <= tmp_3_fu_503_p2(16 - 1 downto 0);
    tmp_23_fu_557_p2 <= std_logic_vector(unsigned(tmp_22_fu_553_p1) + unsigned(tmp_19_fu_549_p1));
    tmp_24_fu_465_p3 <= tmp_9_fu_459_p2(16 downto 16);
    tmp_25_fu_473_p1 <= std_logic_vector(resize(unsigned(tmp_24_fu_465_p3),16));
    tmp_26_fu_477_p1 <= tmp_9_fu_459_p2(16 - 1 downto 0);
    tmp_27_fu_481_p2 <= std_logic_vector(unsigned(tmp_26_fu_477_p1) + unsigned(tmp_25_fu_473_p1));
    tmp_28_1_fu_1256_p1 <= std_logic_vector(resize(unsigned(p_Result_21_1_fu_1248_p3),17));
    tmp_28_2_fu_1302_p1 <= std_logic_vector(resize(unsigned(p_Result_21_2_fu_1294_p3),17));
    tmp_28_3_fu_1348_p1 <= std_logic_vector(resize(unsigned(p_Result_21_3_fu_1340_p3),17));
    tmp_29_1_fu_1260_p2 <= std_logic_vector(unsigned(tmp_28_1_fu_1256_p1) + unsigned(extLd_fu_414_p1));
    tmp_29_2_fu_1306_p2 <= std_logic_vector(unsigned(tmp_28_2_fu_1302_p1) + unsigned(extLd1_fu_394_p1));
    tmp_29_3_fu_1352_p2 <= std_logic_vector(unsigned(tmp_28_3_fu_1348_p1) + unsigned(extLd2_fu_406_p1));
    tmp_29_fu_360_p1 <= dataIn_TDATA(4 - 1 downto 0);
    tmp_2_fu_497_p2 <= std_logic_vector(unsigned(extLd1_fu_394_p1) + unsigned(cics_ip_sums_V_0));
    tmp_30_fu_714_p1 <= tmp_data_V_reg_1406(8 - 1 downto 0);
    tmp_31_fu_735_p3 <= tmp_4_fu_729_p2(16 downto 16);
    tmp_32_1_fu_1157_p1 <= std_logic_vector(resize(unsigned(p_Result_13_1_fu_1149_p3),17));
    tmp_32_fu_743_p1 <= std_logic_vector(resize(unsigned(tmp_31_fu_735_p3),16));
    tmp_33_1_fu_1161_p2 <= std_logic_vector(unsigned(tmp_32_1_fu_1157_p1) + unsigned(extLd_fu_414_p1));
    tmp_33_fu_747_p1 <= tmp_4_fu_729_p2(16 - 1 downto 0);
    tmp_34_fu_751_p2 <= std_logic_vector(unsigned(tmp_33_fu_747_p1) + unsigned(tmp_32_fu_743_p1));
    tmp_35_fu_785_p3 <= tmp_21_1_fu_779_p2(16 downto 16);
    tmp_36_1_fu_966_p1 <= std_logic_vector(resize(unsigned(p_Result_17_1_fu_958_p3),17));
    tmp_36_2_fu_1012_p1 <= std_logic_vector(resize(unsigned(p_Result_17_2_fu_1004_p3),17));
    tmp_36_3_fu_1058_p1 <= std_logic_vector(resize(unsigned(p_Result_17_3_fu_1050_p3),17));
    tmp_36_fu_793_p1 <= std_logic_vector(resize(unsigned(tmp_35_fu_785_p3),16));
    tmp_37_1_fu_970_p2 <= std_logic_vector(unsigned(tmp_36_1_fu_966_p1) + unsigned(extLd_fu_414_p1));
    tmp_37_2_fu_1016_p2 <= std_logic_vector(unsigned(tmp_36_2_fu_1012_p1) + unsigned(extLd1_fu_394_p1));
    tmp_37_3_fu_1062_p2 <= std_logic_vector(unsigned(tmp_36_3_fu_1058_p1) + unsigned(extLd2_fu_406_p1));
    tmp_37_fu_797_p1 <= tmp_21_1_fu_779_p2(16 - 1 downto 0);
    tmp_38_fu_801_p2 <= std_logic_vector(unsigned(tmp_37_fu_797_p1) + unsigned(tmp_36_fu_793_p1));
    tmp_39_fu_831_p3 <= tmp_21_2_fu_825_p2(16 downto 16);
    tmp_3_fu_503_p2 <= std_logic_vector(unsigned(extLd2_fu_406_p1) + unsigned(extLd_fu_414_p1));
    tmp_40_fu_839_p1 <= std_logic_vector(resize(unsigned(tmp_39_fu_831_p3),16));
    tmp_41_2_fu_630_p1 <= std_logic_vector(resize(unsigned(p_Result_9_2_fu_622_p3),17));
    tmp_41_3_fu_676_p1 <= std_logic_vector(resize(unsigned(p_Result_9_3_fu_668_p3),17));
    tmp_41_fu_843_p1 <= tmp_21_2_fu_825_p2(16 - 1 downto 0);
    tmp_42_2_fu_634_p2 <= std_logic_vector(unsigned(tmp_41_2_fu_630_p1) + unsigned(extLd1_fu_394_p1));
    tmp_42_3_fu_680_p2 <= std_logic_vector(unsigned(tmp_41_3_fu_676_p1) + unsigned(extLd2_fu_406_p1));
    tmp_42_fu_847_p2 <= std_logic_vector(unsigned(tmp_41_fu_843_p1) + unsigned(tmp_40_fu_839_p1));
    tmp_43_fu_877_p3 <= tmp_21_3_fu_871_p2(16 downto 16);
    tmp_44_fu_885_p1 <= std_logic_vector(resize(unsigned(tmp_43_fu_877_p3),16));
    tmp_45_fu_889_p1 <= tmp_21_3_fu_871_p2(16 - 1 downto 0);
    tmp_46_fu_893_p2 <= std_logic_vector(unsigned(tmp_45_fu_889_p1) + unsigned(tmp_44_fu_885_p1));
    tmp_47_fu_569_p1 <= tmp_data_V_reg_1406(8 - 1 downto 0);
    tmp_48_fu_590_p3 <= tmp_s_fu_584_p2(16 downto 16);
    tmp_49_fu_598_p1 <= std_logic_vector(resize(unsigned(tmp_48_fu_590_p3),16));
    tmp_4_fu_729_p2 <= std_logic_vector(unsigned(tmp_1_fu_725_p1) + unsigned(cics_ip_sums_V_0));
    tmp_50_fu_602_p1 <= tmp_s_fu_584_p2(16 - 1 downto 0);
    tmp_51_fu_606_p2 <= std_logic_vector(unsigned(tmp_50_fu_602_p1) + unsigned(tmp_49_fu_598_p1));
    tmp_52_fu_640_p3 <= tmp_42_2_fu_634_p2(16 downto 16);
    tmp_53_fu_648_p1 <= std_logic_vector(resize(unsigned(tmp_52_fu_640_p3),16));
    tmp_54_fu_652_p1 <= tmp_42_2_fu_634_p2(16 - 1 downto 0);
    tmp_55_fu_656_p2 <= std_logic_vector(unsigned(tmp_54_fu_652_p1) + unsigned(tmp_53_fu_648_p1));
    tmp_56_fu_686_p3 <= tmp_42_3_fu_680_p2(16 downto 16);
    tmp_57_fu_694_p1 <= std_logic_vector(resize(unsigned(tmp_56_fu_686_p3),16));
    tmp_58_fu_698_p1 <= tmp_42_3_fu_680_p2(16 - 1 downto 0);
    tmp_59_fu_702_p2 <= std_logic_vector(unsigned(tmp_58_fu_698_p1) + unsigned(tmp_57_fu_694_p1));
    tmp_5_fu_509_p3 <= tmp_2_fu_497_p2(16 downto 16);
    tmp_60_fu_1195_p1 <= tmp_data_V_reg_1406(8 - 1 downto 0);
    tmp_61_fu_1216_p3 <= tmp_13_fu_1210_p2(16 downto 16);
    tmp_62_fu_1224_p1 <= std_logic_vector(resize(unsigned(tmp_61_fu_1216_p3),16));
    tmp_63_fu_1228_p1 <= tmp_13_fu_1210_p2(16 - 1 downto 0);
    tmp_64_fu_1232_p2 <= std_logic_vector(unsigned(tmp_63_fu_1228_p1) + unsigned(tmp_62_fu_1224_p1));
    tmp_65_fu_1266_p3 <= tmp_29_1_fu_1260_p2(16 downto 16);
    tmp_66_fu_1274_p1 <= std_logic_vector(resize(unsigned(tmp_65_fu_1266_p3),16));
    tmp_67_fu_1278_p1 <= tmp_29_1_fu_1260_p2(16 - 1 downto 0);
    tmp_68_fu_1282_p2 <= std_logic_vector(unsigned(tmp_67_fu_1278_p1) + unsigned(tmp_66_fu_1274_p1));
    tmp_69_fu_1312_p3 <= tmp_29_2_fu_1306_p2(16 downto 16);
    tmp_6_fu_517_p1 <= std_logic_vector(resize(unsigned(tmp_5_fu_509_p3),16));
    tmp_70_fu_1320_p1 <= std_logic_vector(resize(unsigned(tmp_69_fu_1312_p3),16));
    tmp_71_fu_1324_p1 <= tmp_29_2_fu_1306_p2(16 - 1 downto 0);
    tmp_72_fu_1328_p2 <= std_logic_vector(unsigned(tmp_71_fu_1324_p1) + unsigned(tmp_70_fu_1320_p1));
    tmp_73_fu_1358_p3 <= tmp_29_3_fu_1352_p2(16 downto 16);
    tmp_74_fu_1366_p1 <= std_logic_vector(resize(unsigned(tmp_73_fu_1358_p3),16));
    tmp_75_fu_1370_p1 <= tmp_29_3_fu_1352_p2(16 - 1 downto 0);
    tmp_76_fu_1374_p2 <= std_logic_vector(unsigned(tmp_75_fu_1370_p1) + unsigned(tmp_74_fu_1366_p1));
    tmp_77_fu_1096_p1 <= tmp_data_V_reg_1406(8 - 1 downto 0);
    tmp_78_fu_1117_p3 <= tmp_17_fu_1111_p2(16 downto 16);
    tmp_79_fu_1125_p1 <= std_logic_vector(resize(unsigned(tmp_78_fu_1117_p3),16));
    tmp_7_fu_521_p1 <= tmp_2_fu_497_p2(16 - 1 downto 0);
    tmp_80_fu_1129_p1 <= tmp_17_fu_1111_p2(16 - 1 downto 0);
    tmp_81_fu_1133_p2 <= std_logic_vector(unsigned(tmp_80_fu_1129_p1) + unsigned(tmp_79_fu_1125_p1));
    tmp_82_fu_1167_p3 <= tmp_33_1_fu_1161_p2(16 downto 16);
    tmp_83_fu_1175_p1 <= std_logic_vector(resize(unsigned(tmp_82_fu_1167_p3),16));
    tmp_84_fu_1179_p1 <= tmp_33_1_fu_1161_p2(16 - 1 downto 0);
    tmp_85_fu_1183_p2 <= std_logic_vector(unsigned(tmp_84_fu_1179_p1) + unsigned(tmp_83_fu_1175_p1));
    tmp_86_fu_905_p1 <= tmp_data_V_reg_1406(8 - 1 downto 0);
    tmp_87_fu_926_p3 <= tmp_20_fu_920_p2(16 downto 16);
    tmp_88_fu_934_p1 <= std_logic_vector(resize(unsigned(tmp_87_fu_926_p3),16));
    tmp_89_fu_938_p1 <= tmp_20_fu_920_p2(16 - 1 downto 0);
    tmp_8_fu_580_p1 <= std_logic_vector(resize(unsigned(p_Result_9_fu_572_p3),17));
    tmp_90_fu_942_p2 <= std_logic_vector(unsigned(tmp_89_fu_938_p1) + unsigned(tmp_88_fu_934_p1));
    tmp_91_fu_976_p3 <= tmp_37_1_fu_970_p2(16 downto 16);
    tmp_92_fu_984_p1 <= std_logic_vector(resize(unsigned(tmp_91_fu_976_p3),16));
    tmp_93_fu_988_p1 <= tmp_37_1_fu_970_p2(16 - 1 downto 0);
    tmp_94_fu_992_p2 <= std_logic_vector(unsigned(tmp_93_fu_988_p1) + unsigned(tmp_92_fu_984_p1));
    tmp_95_fu_1022_p3 <= tmp_37_2_fu_1016_p2(16 downto 16);
    tmp_96_fu_1030_p1 <= std_logic_vector(resize(unsigned(tmp_95_fu_1022_p3),16));
    tmp_97_fu_1034_p1 <= tmp_37_2_fu_1016_p2(16 - 1 downto 0);
    tmp_98_fu_1038_p2 <= std_logic_vector(unsigned(tmp_97_fu_1034_p1) + unsigned(tmp_96_fu_1030_p1));
    tmp_99_fu_1068_p3 <= tmp_37_3_fu_1062_p2(16 downto 16);
    tmp_9_fu_459_p2 <= std_logic_vector(unsigned(extLd_fu_414_p1) + unsigned(cics_ip_sums_V_0));
    tmp_nbreadreq_fu_132_p5 <= (0=>(dataIn_TVALID), others=>'-');
    tmp_s_fu_584_p2 <= std_logic_vector(unsigned(tmp_8_fu_580_p1) + unsigned(cics_ip_sums_V_0));
end behav;
