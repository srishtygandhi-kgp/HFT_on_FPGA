-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.1
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mac_ip_encode_extract_ip_address is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dataStreamBuffer1_V_dout : IN STD_LOGIC_VECTOR (72 downto 0);
    dataStreamBuffer1_V_empty_n : IN STD_LOGIC;
    dataStreamBuffer1_V_read : OUT STD_LOGIC;
    dataStreamBuffer2_V_din : OUT STD_LOGIC_VECTOR (72 downto 0);
    dataStreamBuffer2_V_full_n : IN STD_LOGIC;
    dataStreamBuffer2_V_write : OUT STD_LOGIC;
    arpTableOut_V_V_TREADY : IN STD_LOGIC;
    arpTableOut_V_V_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    arpTableOut_V_V_TVALID : OUT STD_LOGIC;
    regSubNetMask_V : IN STD_LOGIC_VECTOR (31 downto 0);
    regDefaultGateway_V : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of mac_ip_encode_extract_ip_address is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm0_0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_st2_fsm1_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st3_fsm2_1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_st0_fsm1_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_st0_fsm2_0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm0 : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm0_0 : STD_LOGIC;
    signal ap_sig_bdd_26 : BOOLEAN;
    signal ap_CS_fsm1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding of ap_CS_fsm1 : signal is "none";
    signal ap_sig_cseq_ST_st0_fsm1_0 : STD_LOGIC;
    signal ap_sig_bdd_37 : BOOLEAN;
    signal ap_CS_fsm2 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding of ap_CS_fsm2 : signal is "none";
    signal ap_sig_cseq_ST_st0_fsm2_0 : STD_LOGIC;
    signal ap_sig_bdd_45 : BOOLEAN;
    signal tmp_nbreadreq_fu_86_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_63 : BOOLEAN;
    signal tmp_reg_204 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_74 : BOOLEAN;
    signal ap_sig_cseq_ST_st2_fsm1_1 : STD_LOGIC;
    signal ap_sig_bdd_80 : BOOLEAN;
    signal ap_reg_ppstg_tmp_reg_204_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond_reg_215 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_cond_reg_215_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_232 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_232_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_arpTableOut_V_V_TREADY : STD_LOGIC;
    signal ap_sig_cseq_ST_st3_fsm2_1 : STD_LOGIC;
    signal ap_sig_bdd_107 : BOOLEAN;
    signal eia_wordCount_V : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal tmp_V_1_reg_193 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ppstg_tmp_V_1_reg_193_pp0_it1 : STD_LOGIC_VECTOR (31 downto 0);
    signal regSubNetMask_V_read_reg_199 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp15_reg_208 : STD_LOGIC_VECTOR (72 downto 0);
    signal cond_fu_119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_109_fu_125_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dstIpAddress_V_fu_156_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal dstIpAddress_V_reg_227 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond_fu_181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_138_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ioackin_arpTableOut_V_V_TREADY : STD_LOGIC := '0';
    signal tmp_s_fu_159_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_164_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_bdd_275 : BOOLEAN;
    signal ap_sig_bdd_278 : BOOLEAN;
    signal ap_sig_bdd_280 : BOOLEAN;
    signal ap_sig_bdd_142 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm0) of the state machine. --
    ap_CS_fsm0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm0 <= ap_ST_st1_fsm0_0;
            else
                ap_CS_fsm0 <= ap_NS_fsm0;
            end if;
        end if;
    end process;


    -- the current state (ap_CS_fsm1) of the state machine. --
    ap_CS_fsm1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm1 <= ap_ST_st0_fsm1_0;
            else
                ap_CS_fsm1 <= ap_NS_fsm1;
            end if;
        end if;
    end process;


    -- the current state (ap_CS_fsm2) of the state machine. --
    ap_CS_fsm2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm2 <= ap_ST_st0_fsm2_0;
            else
                ap_CS_fsm2 <= ap_NS_fsm2;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1) and not(((ap_done_reg = ap_const_logic_1) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1))))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ioackin_arpTableOut_V_V_TREADY assign process. --
    ap_reg_ioackin_arpTableOut_V_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_arpTableOut_V_V_TREADY <= ap_const_logic_0;
            else
                if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1) and not(((ap_done_reg = ap_const_logic_1) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1) and not(((ap_done_reg = ap_const_logic_1) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))))))) then 
                    ap_reg_ioackin_arpTableOut_V_V_TREADY <= ap_const_logic_0;
                elsif (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1) and not((ap_done_reg = ap_const_logic_1)) and (ap_const_logic_1 = arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1) and not((ap_done_reg = ap_const_logic_1)) and (ap_const_logic_1 = arpTableOut_V_V_TREADY)))) then 
                    ap_reg_ioackin_arpTableOut_V_V_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- eia_wordCount_V assign process. --
    eia_wordCount_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_142) then
                if (not((ap_const_lv1_0 = cond_fu_119_p2))) then 
                    eia_wordCount_V <= ap_const_lv2_3;
                elsif (ap_sig_bdd_280) then 
                    eia_wordCount_V <= ap_const_lv2_0;
                elsif (ap_sig_bdd_278) then 
                    eia_wordCount_V <= tmp_24_fu_138_p2;
                end if;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))))) then
                ap_reg_ppstg_tmp_V_1_reg_193_pp0_it1 <= tmp_V_1_reg_193;
                ap_reg_ppstg_tmp_reg_204_pp0_it1 <= tmp_reg_204;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_reg_204)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))))) then
                cond_reg_215 <= cond_fu_119_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_reg_204)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))) and not((ap_const_lv1_0 = cond_fu_119_p2)))) then
                dstIpAddress_V_reg_227 <= dstIpAddress_V_fu_156_p1;
                or_cond_reg_232 <= or_cond_fu_181_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)) or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))))) then
                regSubNetMask_V_read_reg_199 <= regSubNetMask_V;
                tmp_V_1_reg_193 <= regDefaultGateway_V;
                tmp_reg_204 <= tmp_nbreadreq_fu_86_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)) or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))))) then
                tmp15_reg_208 <= dataStreamBuffer1_V_dout;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm0) of the state machine. --
    ap_NS_fsm0_assign_proc : process (ap_done_reg, ap_CS_fsm0, ap_sig_bdd_63, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ppstg_tmp_reg_204_pp0_it1, ap_reg_ppstg_cond_reg_215_pp0_it1, ap_reg_ppstg_or_cond_reg_232_pp0_it1, ap_sig_ioackin_arpTableOut_V_V_TREADY, ap_sig_cseq_ST_st3_fsm2_1)
    begin
        case ap_CS_fsm0 is
            when ap_ST_st1_fsm0_0 => 
                ap_NS_fsm0 <= ap_ST_st1_fsm0_0;
            when others =>  
                ap_NS_fsm0 <= "X";
        end case;
    end process;

    -- the next state (ap_NS_fsm1) of the state machine. --
    ap_NS_fsm1_assign_proc : process (ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_CS_fsm1, ap_sig_bdd_63, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ppstg_tmp_reg_204_pp0_it1, ap_reg_ppstg_cond_reg_215_pp0_it1, ap_reg_ppstg_or_cond_reg_232_pp0_it1, ap_sig_ioackin_arpTableOut_V_V_TREADY, ap_sig_cseq_ST_st3_fsm2_1)
    begin
        case ap_CS_fsm1 is
            when ap_ST_st2_fsm1_1 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))) and not(ap_sig_bdd_63))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))) and (not((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and ap_sig_bdd_63)))) then
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                else
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                end if;
            when ap_ST_st0_fsm1_0 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)) or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))))) then
                    ap_NS_fsm1 <= ap_ST_st2_fsm1_1;
                else
                    ap_NS_fsm1 <= ap_ST_st0_fsm1_0;
                end if;
            when others =>  
                ap_NS_fsm1 <= "XX";
        end case;
    end process;

    -- the next state (ap_NS_fsm2) of the state machine. --
    ap_NS_fsm2_assign_proc : process (ap_done_reg, ap_CS_fsm2, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ppstg_tmp_reg_204_pp0_it1, ap_reg_ppstg_cond_reg_215_pp0_it1, ap_reg_ppstg_or_cond_reg_232_pp0_it1, ap_sig_ioackin_arpTableOut_V_V_TREADY, ap_sig_cseq_ST_st3_fsm2_1)
    begin
        case ap_CS_fsm2 is
            when ap_ST_st3_fsm2_1 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1))))) and not(ap_sig_bdd_74))) then
                    ap_NS_fsm2 <= ap_ST_st3_fsm2_1;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1))))) and ((ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)) or not((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1))))) then
                    ap_NS_fsm2 <= ap_ST_st0_fsm2_0;
                else
                    ap_NS_fsm2 <= ap_ST_st3_fsm2_1;
                end if;
            when ap_ST_st0_fsm2_0 => 
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))))) then
                    ap_NS_fsm2 <= ap_ST_st3_fsm2_1;
                else
                    ap_NS_fsm2 <= ap_ST_st0_fsm2_0;
                end if;
            when others =>  
                ap_NS_fsm2 <= "XX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, ap_reg_ppstg_tmp_reg_204_pp0_it1, ap_reg_ppstg_cond_reg_215_pp0_it1, ap_reg_ppstg_or_cond_reg_232_pp0_it1, ap_sig_ioackin_arpTableOut_V_V_TREADY, ap_sig_cseq_ST_st3_fsm2_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1) and not(((ap_done_reg = ap_const_logic_1) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_cseq_ST_st0_fsm1_0, ap_sig_cseq_ST_st0_fsm2_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st0_fsm1_0) and (ap_const_logic_1 = ap_sig_cseq_ST_st0_fsm2_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, ap_sig_bdd_63, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ppstg_tmp_reg_204_pp0_it1, ap_reg_ppstg_cond_reg_215_pp0_it1, ap_reg_ppstg_or_cond_reg_232_pp0_it1, ap_sig_ioackin_arpTableOut_V_V_TREADY, ap_sig_cseq_ST_st3_fsm2_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)) or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_ppstg_cond_reg_215_pp0_it1 <= cond_reg_215;
    ap_reg_ppstg_or_cond_reg_232_pp0_it1 <= or_cond_reg_232;

    -- ap_sig_bdd_107 assign process. --
    ap_sig_bdd_107_assign_proc : process(ap_CS_fsm2)
    begin
                ap_sig_bdd_107 <= (ap_const_lv1_1 = ap_CS_fsm2(1 downto 1));
    end process;


    -- ap_sig_bdd_142 assign process. --
    ap_sig_bdd_142_assign_proc : process(ap_done_reg, tmp_reg_204, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ppstg_tmp_reg_204_pp0_it1, ap_reg_ppstg_cond_reg_215_pp0_it1, ap_reg_ppstg_or_cond_reg_232_pp0_it1, ap_sig_ioackin_arpTableOut_V_V_TREADY, ap_sig_cseq_ST_st3_fsm2_1)
    begin
                ap_sig_bdd_142 <= (not((ap_const_lv1_0 = tmp_reg_204)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))));
    end process;


    -- ap_sig_bdd_26 assign process. --
    ap_sig_bdd_26_assign_proc : process(ap_CS_fsm0)
    begin
                ap_sig_bdd_26 <= (ap_CS_fsm0(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_275 assign process. --
    ap_sig_bdd_275_assign_proc : process(ap_done_reg, ap_reg_ppstg_tmp_reg_204_pp0_it1, ap_reg_ppstg_cond_reg_215_pp0_it1, ap_sig_cseq_ST_st3_fsm2_1)
    begin
                ap_sig_bdd_275 <= (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1) and not((ap_done_reg = ap_const_logic_1)));
    end process;


    -- ap_sig_bdd_278 assign process. --
    ap_sig_bdd_278_assign_proc : process(cond_fu_119_p2, tmp_109_fu_125_p3, tmp_23_fu_132_p2)
    begin
                ap_sig_bdd_278 <= ((ap_const_lv1_0 = cond_fu_119_p2) and (ap_const_lv1_0 = tmp_109_fu_125_p3) and (ap_const_lv1_0 = tmp_23_fu_132_p2));
    end process;


    -- ap_sig_bdd_280 assign process. --
    ap_sig_bdd_280_assign_proc : process(cond_fu_119_p2, tmp_109_fu_125_p3)
    begin
                ap_sig_bdd_280 <= ((ap_const_lv1_0 = cond_fu_119_p2) and not((ap_const_lv1_0 = tmp_109_fu_125_p3)));
    end process;


    -- ap_sig_bdd_37 assign process. --
    ap_sig_bdd_37_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_37 <= (ap_const_lv1_1 = ap_CS_fsm1(0 downto 0));
    end process;


    -- ap_sig_bdd_45 assign process. --
    ap_sig_bdd_45_assign_proc : process(ap_CS_fsm2)
    begin
                ap_sig_bdd_45 <= (ap_const_lv1_1 = ap_CS_fsm2(0 downto 0));
    end process;


    -- ap_sig_bdd_63 assign process. --
    ap_sig_bdd_63_assign_proc : process(ap_start, ap_done_reg, dataStreamBuffer1_V_empty_n, tmp_nbreadreq_fu_86_p3)
    begin
                ap_sig_bdd_63 <= (((dataStreamBuffer1_V_empty_n = ap_const_logic_0) and not((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0))) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_74 assign process. --
    ap_sig_bdd_74_assign_proc : process(dataStreamBuffer2_V_full_n, tmp_reg_204)
    begin
                ap_sig_bdd_74 <= ((dataStreamBuffer2_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = tmp_reg_204)));
    end process;


    -- ap_sig_bdd_80 assign process. --
    ap_sig_bdd_80_assign_proc : process(ap_CS_fsm1)
    begin
                ap_sig_bdd_80 <= (ap_const_lv1_1 = ap_CS_fsm1(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_st0_fsm1_0 assign process. --
    ap_sig_cseq_ST_st0_fsm1_0_assign_proc : process(ap_sig_bdd_37)
    begin
        if (ap_sig_bdd_37) then 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st0_fsm1_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st0_fsm2_0 assign process. --
    ap_sig_cseq_ST_st0_fsm2_0_assign_proc : process(ap_sig_bdd_45)
    begin
        if (ap_sig_bdd_45) then 
            ap_sig_cseq_ST_st0_fsm2_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st0_fsm2_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm0_0 assign process. --
    ap_sig_cseq_ST_st1_fsm0_0_assign_proc : process(ap_sig_bdd_26)
    begin
        if (ap_sig_bdd_26) then 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm0_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm1_1 assign process. --
    ap_sig_cseq_ST_st2_fsm1_1_assign_proc : process(ap_sig_bdd_80)
    begin
        if (ap_sig_bdd_80) then 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm1_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm2_1 assign process. --
    ap_sig_cseq_ST_st3_fsm2_1_assign_proc : process(ap_sig_bdd_107)
    begin
        if (ap_sig_bdd_107) then 
            ap_sig_cseq_ST_st3_fsm2_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm2_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_ioackin_arpTableOut_V_V_TREADY assign process. --
    ap_sig_ioackin_arpTableOut_V_V_TREADY_assign_proc : process(arpTableOut_V_V_TREADY, ap_reg_ioackin_arpTableOut_V_V_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_arpTableOut_V_V_TREADY)) then 
            ap_sig_ioackin_arpTableOut_V_V_TREADY <= arpTableOut_V_V_TREADY;
        else 
            ap_sig_ioackin_arpTableOut_V_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;


    -- arpTableOut_V_V_TDATA assign process. --
    arpTableOut_V_V_TDATA_assign_proc : process(ap_reg_ppstg_or_cond_reg_232_pp0_it1, ap_reg_ppstg_tmp_V_1_reg_193_pp0_it1, dstIpAddress_V_reg_227, ap_sig_bdd_275)
    begin
        if (ap_sig_bdd_275) then
            if (not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1))) then 
                arpTableOut_V_V_TDATA <= dstIpAddress_V_reg_227;
            elsif ((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)) then 
                arpTableOut_V_V_TDATA <= ap_reg_ppstg_tmp_V_1_reg_193_pp0_it1;
            else 
                arpTableOut_V_V_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            arpTableOut_V_V_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    -- arpTableOut_V_V_TVALID assign process. --
    arpTableOut_V_V_TVALID_assign_proc : process(ap_done_reg, ap_reg_ppstg_tmp_reg_204_pp0_it1, ap_reg_ppstg_cond_reg_215_pp0_it1, ap_reg_ppstg_or_cond_reg_232_pp0_it1, ap_sig_cseq_ST_st3_fsm2_1, ap_reg_ioackin_arpTableOut_V_V_TREADY)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1) and not((ap_done_reg = ap_const_logic_1)) and (ap_const_logic_0 = ap_reg_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1) and not((ap_done_reg = ap_const_logic_1)) and (ap_const_logic_0 = ap_reg_ioackin_arpTableOut_V_V_TREADY)))) then 
            arpTableOut_V_V_TVALID <= ap_const_logic_1;
        else 
            arpTableOut_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    cond_fu_119_p2 <= "1" when (eia_wordCount_V = ap_const_lv2_2) else "0";

    -- dataStreamBuffer1_V_read assign process. --
    dataStreamBuffer1_V_read_assign_proc : process(ap_done_reg, ap_sig_cseq_ST_st1_fsm0_0, tmp_nbreadreq_fu_86_p3, ap_sig_bdd_63, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ppstg_tmp_reg_204_pp0_it1, ap_reg_ppstg_cond_reg_215_pp0_it1, ap_reg_ppstg_or_cond_reg_232_pp0_it1, ap_sig_ioackin_arpTableOut_V_V_TREADY, ap_sig_cseq_ST_st3_fsm2_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm0_0) and not((tmp_nbreadreq_fu_86_p3 = ap_const_lv1_0)) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_63 or (ap_sig_bdd_74 and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1)) or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))))) then 
            dataStreamBuffer1_V_read <= ap_const_logic_1;
        else 
            dataStreamBuffer1_V_read <= ap_const_logic_0;
        end if; 
    end process;

    dataStreamBuffer2_V_din <= tmp15_reg_208;

    -- dataStreamBuffer2_V_write assign process. --
    dataStreamBuffer2_V_write_assign_proc : process(ap_done_reg, tmp_reg_204, ap_sig_bdd_74, ap_sig_cseq_ST_st2_fsm1_1, ap_reg_ppstg_tmp_reg_204_pp0_it1, ap_reg_ppstg_cond_reg_215_pp0_it1, ap_reg_ppstg_or_cond_reg_232_pp0_it1, ap_sig_ioackin_arpTableOut_V_V_TREADY, ap_sig_cseq_ST_st3_fsm2_1)
    begin
        if ((not((ap_const_lv1_0 = tmp_reg_204)) and (ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm1_1) and not(((ap_done_reg = ap_const_logic_1) or ap_sig_bdd_74 or (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY)) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_reg_204_pp0_it1)) and not((ap_const_lv1_0 = ap_reg_ppstg_cond_reg_215_pp0_it1)) and (ap_const_logic_0 = ap_sig_ioackin_arpTableOut_V_V_TREADY) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_232_pp0_it1)))) and (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm2_1)))))) then 
            dataStreamBuffer2_V_write <= ap_const_logic_1;
        else 
            dataStreamBuffer2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    dstIpAddress_V_fu_156_p1 <= tmp15_reg_208(32 - 1 downto 0);
    or_cond_fu_181_p2 <= (tmp_21_fu_169_p2 or tmp_22_fu_175_p2);
    tmp_109_fu_125_p3 <= tmp15_reg_208(72 downto 72);
    tmp_20_fu_164_p2 <= (tmp_s_fu_159_p2 and regSubNetMask_V_read_reg_199);
    tmp_21_fu_169_p2 <= "1" when (tmp_20_fu_164_p2 = ap_const_lv32_0) else "0";
    tmp_22_fu_175_p2 <= "1" when (dstIpAddress_V_fu_156_p1 = ap_const_lv32_FFFFFFFF) else "0";
    tmp_23_fu_132_p2 <= "1" when (eia_wordCount_V = ap_const_lv2_3) else "0";
    tmp_24_fu_138_p2 <= std_logic_vector(unsigned(eia_wordCount_V) + unsigned(ap_const_lv2_1));
    tmp_nbreadreq_fu_86_p3 <= (0=>dataStreamBuffer1_V_empty_n, others=>'-');
    tmp_s_fu_159_p2 <= (dstIpAddress_V_fu_156_p1 xor tmp_V_1_reg_193);
end behav;
