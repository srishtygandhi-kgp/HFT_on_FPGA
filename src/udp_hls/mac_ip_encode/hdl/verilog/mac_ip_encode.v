// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.1
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mac_ip_encode,hls_ip_2015_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xcku115-flva1517-2-e,HLS_INPUT_CLOCK=6.660000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.407750,HLS_SYN_LAT=2,HLS_SYN_TPT=1,HLS_SYN_MEM=15,HLS_SYN_DSP=0,HLS_SYN_FF=1076,HLS_SYN_LUT=1521}" *)

module mac_ip_encode (
        dataIn_TDATA,
        dataIn_TKEEP,
        dataIn_TLAST,
        arpTableIn_V_TDATA,
        dataOut_TDATA,
        dataOut_TKEEP,
        dataOut_TLAST,
        arpTableOut_V_V_TDATA,
        regSubNetMask_V,
        regDefaultGateway_V,
        myMacAddress_V,
        ap_clk,
        ap_rst_n,
        dataIn_TVALID,
        dataIn_TREADY,
        arpTableOut_V_V_TVALID,
        arpTableOut_V_V_TREADY,
        arpTableIn_V_TVALID,
        arpTableIn_V_TREADY,
        dataOut_TVALID,
        dataOut_TREADY
);

parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_true = 1'b1;

input  [63:0] dataIn_TDATA;
input  [7:0] dataIn_TKEEP;
input  [0:0] dataIn_TLAST;
input  [55:0] arpTableIn_V_TDATA;
output  [63:0] dataOut_TDATA;
output  [7:0] dataOut_TKEEP;
output  [0:0] dataOut_TLAST;
output  [31:0] arpTableOut_V_V_TDATA;
input  [31:0] regSubNetMask_V;
input  [31:0] regDefaultGateway_V;
input  [47:0] myMacAddress_V;
input   ap_clk;
input   ap_rst_n;
input   dataIn_TVALID;
output   dataIn_TREADY;
output   arpTableOut_V_V_TVALID;
input   arpTableOut_V_V_TREADY;
input   arpTableIn_V_TVALID;
output   arpTableIn_V_TREADY;
output   dataOut_TVALID;
input   dataOut_TREADY;

reg    ap_rst_n_inv;
wire    mac_ip_encode_compute_ip_checksum_U0_ap_start;
wire    mac_ip_encode_compute_ip_checksum_U0_ap_done;
wire    mac_ip_encode_compute_ip_checksum_U0_ap_continue;
wire    mac_ip_encode_compute_ip_checksum_U0_ap_idle;
wire    mac_ip_encode_compute_ip_checksum_U0_ap_ready;
wire    mac_ip_encode_compute_ip_checksum_U0_dataIn_TVALID;
wire   [15:0] mac_ip_encode_compute_ip_checksum_U0_checksumFifo_V_V_din;
wire    mac_ip_encode_compute_ip_checksum_U0_checksumFifo_V_V_full_n;
wire    mac_ip_encode_compute_ip_checksum_U0_checksumFifo_V_V_write;
wire   [72:0] mac_ip_encode_compute_ip_checksum_U0_dataStreamBuffer0_V_din;
wire    mac_ip_encode_compute_ip_checksum_U0_dataStreamBuffer0_V_full_n;
wire    mac_ip_encode_compute_ip_checksum_U0_dataStreamBuffer0_V_write;
wire   [63:0] mac_ip_encode_compute_ip_checksum_U0_dataIn_TDATA;
wire    mac_ip_encode_compute_ip_checksum_U0_dataIn_TREADY;
wire   [7:0] mac_ip_encode_compute_ip_checksum_U0_dataIn_TKEEP;
wire   [0:0] mac_ip_encode_compute_ip_checksum_U0_dataIn_TLAST;
reg    mac_ip_encode_ip_checksum_insert_U0_ap_start = 1'b0;
wire    mac_ip_encode_ip_checksum_insert_U0_ap_done;
wire    mac_ip_encode_ip_checksum_insert_U0_ap_continue;
wire    mac_ip_encode_ip_checksum_insert_U0_ap_idle;
wire    mac_ip_encode_ip_checksum_insert_U0_ap_ready;
wire   [72:0] mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer0_V_dout;
wire    mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer0_V_empty_n;
wire    mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer0_V_read;
wire   [15:0] mac_ip_encode_ip_checksum_insert_U0_checksumFifo_V_V_dout;
wire    mac_ip_encode_ip_checksum_insert_U0_checksumFifo_V_V_empty_n;
wire    mac_ip_encode_ip_checksum_insert_U0_checksumFifo_V_V_read;
wire   [72:0] mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer1_V_din;
wire    mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer1_V_full_n;
wire    mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer1_V_write;
wire    mac_ip_encode_extract_ip_address_U0_ap_start;
wire    mac_ip_encode_extract_ip_address_U0_ap_done;
wire    mac_ip_encode_extract_ip_address_U0_ap_continue;
wire    mac_ip_encode_extract_ip_address_U0_ap_idle;
wire    mac_ip_encode_extract_ip_address_U0_ap_ready;
wire   [72:0] mac_ip_encode_extract_ip_address_U0_dataStreamBuffer1_V_dout;
wire    mac_ip_encode_extract_ip_address_U0_dataStreamBuffer1_V_empty_n;
wire    mac_ip_encode_extract_ip_address_U0_dataStreamBuffer1_V_read;
wire   [72:0] mac_ip_encode_extract_ip_address_U0_dataStreamBuffer2_V_din;
wire    mac_ip_encode_extract_ip_address_U0_dataStreamBuffer2_V_full_n;
wire    mac_ip_encode_extract_ip_address_U0_dataStreamBuffer2_V_write;
wire    mac_ip_encode_extract_ip_address_U0_arpTableOut_V_V_TREADY;
wire   [31:0] mac_ip_encode_extract_ip_address_U0_arpTableOut_V_V_TDATA;
wire    mac_ip_encode_extract_ip_address_U0_arpTableOut_V_V_TVALID;
wire   [31:0] mac_ip_encode_extract_ip_address_U0_regSubNetMask_V;
wire   [31:0] mac_ip_encode_extract_ip_address_U0_regDefaultGateway_V;
wire    ap_sig_hs_continue;
wire    mac_ip_encode_handle_arp_reply_U0_ap_start;
wire    mac_ip_encode_handle_arp_reply_U0_ap_done;
wire    mac_ip_encode_handle_arp_reply_U0_ap_continue;
wire    mac_ip_encode_handle_arp_reply_U0_ap_idle;
wire    mac_ip_encode_handle_arp_reply_U0_ap_ready;
wire   [72:0] mac_ip_encode_handle_arp_reply_U0_dataStreamBuffer2_V_dout;
wire    mac_ip_encode_handle_arp_reply_U0_dataStreamBuffer2_V_empty_n;
wire    mac_ip_encode_handle_arp_reply_U0_dataStreamBuffer2_V_read;
wire    mac_ip_encode_handle_arp_reply_U0_arpTableIn_V_TVALID;
wire    mac_ip_encode_handle_arp_reply_U0_dataOut_TREADY;
wire   [55:0] mac_ip_encode_handle_arp_reply_U0_arpTableIn_V_TDATA;
wire    mac_ip_encode_handle_arp_reply_U0_arpTableIn_V_TREADY;
wire   [63:0] mac_ip_encode_handle_arp_reply_U0_dataOut_TDATA;
wire    mac_ip_encode_handle_arp_reply_U0_dataOut_TVALID;
wire   [7:0] mac_ip_encode_handle_arp_reply_U0_dataOut_TKEEP;
wire   [0:0] mac_ip_encode_handle_arp_reply_U0_dataOut_TLAST;
wire   [47:0] mac_ip_encode_handle_arp_reply_U0_myMacAddress_V;
wire    checksumFifo_V_V_U_ap_dummy_ce;
wire   [15:0] checksumFifo_V_V_din;
wire    checksumFifo_V_V_full_n;
wire    checksumFifo_V_V_write;
wire   [15:0] checksumFifo_V_V_dout;
wire    checksumFifo_V_V_empty_n;
wire    checksumFifo_V_V_read;
wire    dataStreamBuffer0_V_U_ap_dummy_ce;
wire   [72:0] dataStreamBuffer0_V_din;
wire    dataStreamBuffer0_V_full_n;
wire    dataStreamBuffer0_V_write;
wire   [72:0] dataStreamBuffer0_V_dout;
wire    dataStreamBuffer0_V_empty_n;
wire    dataStreamBuffer0_V_read;
wire    dataStreamBuffer1_V_U_ap_dummy_ce;
wire   [72:0] dataStreamBuffer1_V_din;
wire    dataStreamBuffer1_V_full_n;
wire    dataStreamBuffer1_V_write;
wire   [72:0] dataStreamBuffer1_V_dout;
wire    dataStreamBuffer1_V_empty_n;
wire    dataStreamBuffer1_V_read;
wire    dataStreamBuffer2_V_U_ap_dummy_ce;
wire   [72:0] dataStreamBuffer2_V_din;
wire    dataStreamBuffer2_V_full_n;
wire    dataStreamBuffer2_V_write;
wire   [72:0] dataStreamBuffer2_V_dout;
wire    dataStreamBuffer2_V_empty_n;
wire    dataStreamBuffer2_V_read;
reg    ap_CS;
reg    ap_reg_procdone_mac_ip_encode_extract_ip_address_U0 = 1'b0;
reg    ap_reg_procdone_mac_ip_encode_handle_arp_reply_U0 = 1'b0;
reg    ap_sig_hs_done;


mac_ip_encode_compute_ip_checksum mac_ip_encode_compute_ip_checksum_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( mac_ip_encode_compute_ip_checksum_U0_ap_start ),
    .ap_done( mac_ip_encode_compute_ip_checksum_U0_ap_done ),
    .ap_continue( mac_ip_encode_compute_ip_checksum_U0_ap_continue ),
    .ap_idle( mac_ip_encode_compute_ip_checksum_U0_ap_idle ),
    .ap_ready( mac_ip_encode_compute_ip_checksum_U0_ap_ready ),
    .dataIn_TVALID( mac_ip_encode_compute_ip_checksum_U0_dataIn_TVALID ),
    .checksumFifo_V_V_din( mac_ip_encode_compute_ip_checksum_U0_checksumFifo_V_V_din ),
    .checksumFifo_V_V_full_n( mac_ip_encode_compute_ip_checksum_U0_checksumFifo_V_V_full_n ),
    .checksumFifo_V_V_write( mac_ip_encode_compute_ip_checksum_U0_checksumFifo_V_V_write ),
    .dataStreamBuffer0_V_din( mac_ip_encode_compute_ip_checksum_U0_dataStreamBuffer0_V_din ),
    .dataStreamBuffer0_V_full_n( mac_ip_encode_compute_ip_checksum_U0_dataStreamBuffer0_V_full_n ),
    .dataStreamBuffer0_V_write( mac_ip_encode_compute_ip_checksum_U0_dataStreamBuffer0_V_write ),
    .dataIn_TDATA( mac_ip_encode_compute_ip_checksum_U0_dataIn_TDATA ),
    .dataIn_TREADY( mac_ip_encode_compute_ip_checksum_U0_dataIn_TREADY ),
    .dataIn_TKEEP( mac_ip_encode_compute_ip_checksum_U0_dataIn_TKEEP ),
    .dataIn_TLAST( mac_ip_encode_compute_ip_checksum_U0_dataIn_TLAST )
);

mac_ip_encode_ip_checksum_insert mac_ip_encode_ip_checksum_insert_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( mac_ip_encode_ip_checksum_insert_U0_ap_start ),
    .ap_done( mac_ip_encode_ip_checksum_insert_U0_ap_done ),
    .ap_continue( mac_ip_encode_ip_checksum_insert_U0_ap_continue ),
    .ap_idle( mac_ip_encode_ip_checksum_insert_U0_ap_idle ),
    .ap_ready( mac_ip_encode_ip_checksum_insert_U0_ap_ready ),
    .dataStreamBuffer0_V_dout( mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer0_V_dout ),
    .dataStreamBuffer0_V_empty_n( mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer0_V_empty_n ),
    .dataStreamBuffer0_V_read( mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer0_V_read ),
    .checksumFifo_V_V_dout( mac_ip_encode_ip_checksum_insert_U0_checksumFifo_V_V_dout ),
    .checksumFifo_V_V_empty_n( mac_ip_encode_ip_checksum_insert_U0_checksumFifo_V_V_empty_n ),
    .checksumFifo_V_V_read( mac_ip_encode_ip_checksum_insert_U0_checksumFifo_V_V_read ),
    .dataStreamBuffer1_V_din( mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer1_V_din ),
    .dataStreamBuffer1_V_full_n( mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer1_V_full_n ),
    .dataStreamBuffer1_V_write( mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer1_V_write )
);

mac_ip_encode_extract_ip_address mac_ip_encode_extract_ip_address_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( mac_ip_encode_extract_ip_address_U0_ap_start ),
    .ap_done( mac_ip_encode_extract_ip_address_U0_ap_done ),
    .ap_continue( mac_ip_encode_extract_ip_address_U0_ap_continue ),
    .ap_idle( mac_ip_encode_extract_ip_address_U0_ap_idle ),
    .ap_ready( mac_ip_encode_extract_ip_address_U0_ap_ready ),
    .dataStreamBuffer1_V_dout( mac_ip_encode_extract_ip_address_U0_dataStreamBuffer1_V_dout ),
    .dataStreamBuffer1_V_empty_n( mac_ip_encode_extract_ip_address_U0_dataStreamBuffer1_V_empty_n ),
    .dataStreamBuffer1_V_read( mac_ip_encode_extract_ip_address_U0_dataStreamBuffer1_V_read ),
    .dataStreamBuffer2_V_din( mac_ip_encode_extract_ip_address_U0_dataStreamBuffer2_V_din ),
    .dataStreamBuffer2_V_full_n( mac_ip_encode_extract_ip_address_U0_dataStreamBuffer2_V_full_n ),
    .dataStreamBuffer2_V_write( mac_ip_encode_extract_ip_address_U0_dataStreamBuffer2_V_write ),
    .arpTableOut_V_V_TREADY( mac_ip_encode_extract_ip_address_U0_arpTableOut_V_V_TREADY ),
    .arpTableOut_V_V_TDATA( mac_ip_encode_extract_ip_address_U0_arpTableOut_V_V_TDATA ),
    .arpTableOut_V_V_TVALID( mac_ip_encode_extract_ip_address_U0_arpTableOut_V_V_TVALID ),
    .regSubNetMask_V( mac_ip_encode_extract_ip_address_U0_regSubNetMask_V ),
    .regDefaultGateway_V( mac_ip_encode_extract_ip_address_U0_regDefaultGateway_V )
);

mac_ip_encode_handle_arp_reply mac_ip_encode_handle_arp_reply_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( mac_ip_encode_handle_arp_reply_U0_ap_start ),
    .ap_done( mac_ip_encode_handle_arp_reply_U0_ap_done ),
    .ap_continue( mac_ip_encode_handle_arp_reply_U0_ap_continue ),
    .ap_idle( mac_ip_encode_handle_arp_reply_U0_ap_idle ),
    .ap_ready( mac_ip_encode_handle_arp_reply_U0_ap_ready ),
    .dataStreamBuffer2_V_dout( mac_ip_encode_handle_arp_reply_U0_dataStreamBuffer2_V_dout ),
    .dataStreamBuffer2_V_empty_n( mac_ip_encode_handle_arp_reply_U0_dataStreamBuffer2_V_empty_n ),
    .dataStreamBuffer2_V_read( mac_ip_encode_handle_arp_reply_U0_dataStreamBuffer2_V_read ),
    .arpTableIn_V_TVALID( mac_ip_encode_handle_arp_reply_U0_arpTableIn_V_TVALID ),
    .dataOut_TREADY( mac_ip_encode_handle_arp_reply_U0_dataOut_TREADY ),
    .arpTableIn_V_TDATA( mac_ip_encode_handle_arp_reply_U0_arpTableIn_V_TDATA ),
    .arpTableIn_V_TREADY( mac_ip_encode_handle_arp_reply_U0_arpTableIn_V_TREADY ),
    .dataOut_TDATA( mac_ip_encode_handle_arp_reply_U0_dataOut_TDATA ),
    .dataOut_TVALID( mac_ip_encode_handle_arp_reply_U0_dataOut_TVALID ),
    .dataOut_TKEEP( mac_ip_encode_handle_arp_reply_U0_dataOut_TKEEP ),
    .dataOut_TLAST( mac_ip_encode_handle_arp_reply_U0_dataOut_TLAST ),
    .myMacAddress_V( mac_ip_encode_handle_arp_reply_U0_myMacAddress_V )
);

FIFO_mac_ip_encode_checksumFifo_V_V checksumFifo_V_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( checksumFifo_V_V_U_ap_dummy_ce ),
    .if_write_ce( checksumFifo_V_V_U_ap_dummy_ce ),
    .if_din( checksumFifo_V_V_din ),
    .if_full_n( checksumFifo_V_V_full_n ),
    .if_write( checksumFifo_V_V_write ),
    .if_dout( checksumFifo_V_V_dout ),
    .if_empty_n( checksumFifo_V_V_empty_n ),
    .if_read( checksumFifo_V_V_read )
);

FIFO_mac_ip_encode_dataStreamBuffer0_V dataStreamBuffer0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( dataStreamBuffer0_V_U_ap_dummy_ce ),
    .if_write_ce( dataStreamBuffer0_V_U_ap_dummy_ce ),
    .if_din( dataStreamBuffer0_V_din ),
    .if_full_n( dataStreamBuffer0_V_full_n ),
    .if_write( dataStreamBuffer0_V_write ),
    .if_dout( dataStreamBuffer0_V_dout ),
    .if_empty_n( dataStreamBuffer0_V_empty_n ),
    .if_read( dataStreamBuffer0_V_read )
);

FIFO_mac_ip_encode_dataStreamBuffer1_V dataStreamBuffer1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( dataStreamBuffer1_V_U_ap_dummy_ce ),
    .if_write_ce( dataStreamBuffer1_V_U_ap_dummy_ce ),
    .if_din( dataStreamBuffer1_V_din ),
    .if_full_n( dataStreamBuffer1_V_full_n ),
    .if_write( dataStreamBuffer1_V_write ),
    .if_dout( dataStreamBuffer1_V_dout ),
    .if_empty_n( dataStreamBuffer1_V_empty_n ),
    .if_read( dataStreamBuffer1_V_read )
);

FIFO_mac_ip_encode_dataStreamBuffer2_V dataStreamBuffer2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( dataStreamBuffer2_V_U_ap_dummy_ce ),
    .if_write_ce( dataStreamBuffer2_V_U_ap_dummy_ce ),
    .if_din( dataStreamBuffer2_V_din ),
    .if_full_n( dataStreamBuffer2_V_full_n ),
    .if_write( dataStreamBuffer2_V_write ),
    .if_dout( dataStreamBuffer2_V_dout ),
    .if_empty_n( dataStreamBuffer2_V_empty_n ),
    .if_read( dataStreamBuffer2_V_read )
);



/// ap_reg_procdone_mac_ip_encode_extract_ip_address_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_mac_ip_encode_extract_ip_address_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_mac_ip_encode_extract_ip_address_U0 <= ap_const_logic_0;
    end else begin
    end
end

/// ap_reg_procdone_mac_ip_encode_handle_arp_reply_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_mac_ip_encode_handle_arp_reply_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_mac_ip_encode_handle_arp_reply_U0 <= ap_const_logic_0;
    end else begin
    end
end

/// mac_ip_encode_ip_checksum_insert_U0_ap_start assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_mac_ip_encode_ip_checksum_insert_U0_ap_start
    if (ap_rst_n_inv == 1'b1) begin
        mac_ip_encode_ip_checksum_insert_U0_ap_start <= ap_const_logic_0;
    end else begin
        mac_ip_encode_ip_checksum_insert_U0_ap_start <= ap_const_logic_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_sig_hs_done assign process. ///
always @ (ap_reg_procdone_mac_ip_encode_extract_ip_address_U0 or ap_reg_procdone_mac_ip_encode_handle_arp_reply_U0)
begin
    if (((ap_const_logic_1 == ap_reg_procdone_mac_ip_encode_extract_ip_address_U0) & (ap_const_logic_1 == ap_reg_procdone_mac_ip_encode_handle_arp_reply_U0))) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign ap_sig_hs_continue = ap_const_logic_0;
assign arpTableIn_V_TREADY = mac_ip_encode_handle_arp_reply_U0_arpTableIn_V_TREADY;
assign arpTableOut_V_V_TDATA = mac_ip_encode_extract_ip_address_U0_arpTableOut_V_V_TDATA;
assign arpTableOut_V_V_TVALID = mac_ip_encode_extract_ip_address_U0_arpTableOut_V_V_TVALID;
assign checksumFifo_V_V_U_ap_dummy_ce = ap_const_logic_1;
assign checksumFifo_V_V_din = mac_ip_encode_compute_ip_checksum_U0_checksumFifo_V_V_din;
assign checksumFifo_V_V_read = mac_ip_encode_ip_checksum_insert_U0_checksumFifo_V_V_read;
assign checksumFifo_V_V_write = mac_ip_encode_compute_ip_checksum_U0_checksumFifo_V_V_write;
assign dataIn_TREADY = mac_ip_encode_compute_ip_checksum_U0_dataIn_TREADY;
assign dataOut_TDATA = mac_ip_encode_handle_arp_reply_U0_dataOut_TDATA;
assign dataOut_TKEEP = mac_ip_encode_handle_arp_reply_U0_dataOut_TKEEP;
assign dataOut_TLAST = mac_ip_encode_handle_arp_reply_U0_dataOut_TLAST;
assign dataOut_TVALID = mac_ip_encode_handle_arp_reply_U0_dataOut_TVALID;
assign dataStreamBuffer0_V_U_ap_dummy_ce = ap_const_logic_1;
assign dataStreamBuffer0_V_din = mac_ip_encode_compute_ip_checksum_U0_dataStreamBuffer0_V_din;
assign dataStreamBuffer0_V_read = mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer0_V_read;
assign dataStreamBuffer0_V_write = mac_ip_encode_compute_ip_checksum_U0_dataStreamBuffer0_V_write;
assign dataStreamBuffer1_V_U_ap_dummy_ce = ap_const_logic_1;
assign dataStreamBuffer1_V_din = mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer1_V_din;
assign dataStreamBuffer1_V_read = mac_ip_encode_extract_ip_address_U0_dataStreamBuffer1_V_read;
assign dataStreamBuffer1_V_write = mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer1_V_write;
assign dataStreamBuffer2_V_U_ap_dummy_ce = ap_const_logic_1;
assign dataStreamBuffer2_V_din = mac_ip_encode_extract_ip_address_U0_dataStreamBuffer2_V_din;
assign dataStreamBuffer2_V_read = mac_ip_encode_handle_arp_reply_U0_dataStreamBuffer2_V_read;
assign dataStreamBuffer2_V_write = mac_ip_encode_extract_ip_address_U0_dataStreamBuffer2_V_write;
assign mac_ip_encode_compute_ip_checksum_U0_ap_continue = ap_const_logic_1;
assign mac_ip_encode_compute_ip_checksum_U0_ap_start = ap_const_logic_1;
assign mac_ip_encode_compute_ip_checksum_U0_checksumFifo_V_V_full_n = checksumFifo_V_V_full_n;
assign mac_ip_encode_compute_ip_checksum_U0_dataIn_TDATA = dataIn_TDATA;
assign mac_ip_encode_compute_ip_checksum_U0_dataIn_TKEEP = dataIn_TKEEP;
assign mac_ip_encode_compute_ip_checksum_U0_dataIn_TLAST = dataIn_TLAST;
assign mac_ip_encode_compute_ip_checksum_U0_dataIn_TVALID = dataIn_TVALID;
assign mac_ip_encode_compute_ip_checksum_U0_dataStreamBuffer0_V_full_n = dataStreamBuffer0_V_full_n;
assign mac_ip_encode_extract_ip_address_U0_ap_continue = ap_const_logic_1;
assign mac_ip_encode_extract_ip_address_U0_ap_start = ap_const_logic_1;
assign mac_ip_encode_extract_ip_address_U0_arpTableOut_V_V_TREADY = arpTableOut_V_V_TREADY;
assign mac_ip_encode_extract_ip_address_U0_dataStreamBuffer1_V_dout = dataStreamBuffer1_V_dout;
assign mac_ip_encode_extract_ip_address_U0_dataStreamBuffer1_V_empty_n = dataStreamBuffer1_V_empty_n;
assign mac_ip_encode_extract_ip_address_U0_dataStreamBuffer2_V_full_n = dataStreamBuffer2_V_full_n;
assign mac_ip_encode_extract_ip_address_U0_regDefaultGateway_V = regDefaultGateway_V;
assign mac_ip_encode_extract_ip_address_U0_regSubNetMask_V = regSubNetMask_V;
assign mac_ip_encode_handle_arp_reply_U0_ap_continue = ap_const_logic_1;
assign mac_ip_encode_handle_arp_reply_U0_ap_start = ap_const_logic_1;
assign mac_ip_encode_handle_arp_reply_U0_arpTableIn_V_TDATA = arpTableIn_V_TDATA;
assign mac_ip_encode_handle_arp_reply_U0_arpTableIn_V_TVALID = arpTableIn_V_TVALID;
assign mac_ip_encode_handle_arp_reply_U0_dataOut_TREADY = dataOut_TREADY;
assign mac_ip_encode_handle_arp_reply_U0_dataStreamBuffer2_V_dout = dataStreamBuffer2_V_dout;
assign mac_ip_encode_handle_arp_reply_U0_dataStreamBuffer2_V_empty_n = dataStreamBuffer2_V_empty_n;
assign mac_ip_encode_handle_arp_reply_U0_myMacAddress_V = myMacAddress_V;
assign mac_ip_encode_ip_checksum_insert_U0_ap_continue = ap_const_logic_1;
assign mac_ip_encode_ip_checksum_insert_U0_checksumFifo_V_V_dout = checksumFifo_V_V_dout;
assign mac_ip_encode_ip_checksum_insert_U0_checksumFifo_V_V_empty_n = checksumFifo_V_V_empty_n;
assign mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer0_V_dout = dataStreamBuffer0_V_dout;
assign mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer0_V_empty_n = dataStreamBuffer0_V_empty_n;
assign mac_ip_encode_ip_checksum_insert_U0_dataStreamBuffer1_V_full_n = dataStreamBuffer1_V_full_n;


endmodule //mac_ip_encode

