// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Block_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        synchTime_1_V_V_din,
        synchTime_1_V_V_full_n,
        synchTime_1_V_V_write,
        synchTime_2_V_V_din,
        synchTime_2_V_V_full_n,
        synchTime_2_V_V_write,
        asyncTime_V
);

parameter    ap_ST_fsm_state1 = 1'b1;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [63:0] synchTime_1_V_V_din;
input   synchTime_1_V_V_full_n;
output   synchTime_1_V_V_write;
output  [63:0] synchTime_2_V_V_din;
input   synchTime_2_V_V_full_n;
output   synchTime_2_V_V_write;
input  [63:0] asyncTime_V;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg synchTime_1_V_V_write;
reg synchTime_2_V_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    synchTime_1_V_V_blk_n;
wire   [0:0] tmp_nbwritereq_fu_66_p3;
wire   [0:0] tmp_1_nbwritereq_fu_74_p3;
reg    synchTime_2_V_V_blk_n;
reg    ap_condition_55;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'b1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_55 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_55 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_55 == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(tmp_nbwritereq_fu_66_p3 == 1'b0) & ~(1'b0 == tmp_1_nbwritereq_fu_74_p3))) begin
        synchTime_1_V_V_blk_n = synchTime_1_V_V_full_n;
    end else begin
        synchTime_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(tmp_nbwritereq_fu_66_p3 == 1'b0) & ~(1'b0 == tmp_1_nbwritereq_fu_74_p3) & ~(ap_condition_55 == 1'b1))) begin
        synchTime_1_V_V_write = 1'b1;
    end else begin
        synchTime_1_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(tmp_nbwritereq_fu_66_p3 == 1'b0) & ~(1'b0 == tmp_1_nbwritereq_fu_74_p3))) begin
        synchTime_2_V_V_blk_n = synchTime_2_V_V_full_n;
    end else begin
        synchTime_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(tmp_nbwritereq_fu_66_p3 == 1'b0) & ~(1'b0 == tmp_1_nbwritereq_fu_74_p3) & ~(ap_condition_55 == 1'b1))) begin
        synchTime_2_V_V_write = 1'b1;
    end else begin
        synchTime_2_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

always @ (*) begin
    ap_condition_55 = ((~(tmp_nbwritereq_fu_66_p3 == 1'b0) & ~(1'b0 == tmp_1_nbwritereq_fu_74_p3) & (synchTime_1_V_V_full_n == 1'b0)) | (~(tmp_nbwritereq_fu_66_p3 == 1'b0) & ~(1'b0 == tmp_1_nbwritereq_fu_74_p3) & (synchTime_2_V_V_full_n == 1'b0)) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign synchTime_1_V_V_din = asyncTime_V;

assign synchTime_2_V_V_din = asyncTime_V;

assign tmp_1_nbwritereq_fu_74_p3 = synchTime_2_V_V_full_n;

assign tmp_nbwritereq_fu_66_p3 = synchTime_1_V_V_full_n;

endmodule //Block_proc
