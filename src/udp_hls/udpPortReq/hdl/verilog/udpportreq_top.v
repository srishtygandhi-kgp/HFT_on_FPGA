// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

`timescale 1 ns / 1 ps
module udpportreq_top (
rxReplyPort_TVALID,
rxReplyPort_TREADY,
rxReplyPort_TDATA,
txRequestPort_TVALID,
txRequestPort_TREADY,
txRequestPort_TDATA,
aresetn,
aclk
);

parameter RESET_ACTIVE_LOW = 1;

input rxReplyPort_TVALID ;
output rxReplyPort_TREADY ;
input [8 - 1:0] rxReplyPort_TDATA ;


output txRequestPort_TVALID ;
input txRequestPort_TREADY ;
output [16 - 1:0] txRequestPort_TDATA ;

input aresetn ;

input aclk ;


wire rxReplyPort_TVALID;
wire rxReplyPort_TREADY;
wire [8 - 1:0] rxReplyPort_TDATA;


wire txRequestPort_TVALID;
wire txRequestPort_TREADY;
wire [16 - 1:0] txRequestPort_TDATA;

wire aresetn;


wire [1 - 1:0] sig_udpPortReq_rxReplyPort_V_dout;
wire sig_udpPortReq_rxReplyPort_V_empty_n;
wire sig_udpPortReq_rxReplyPort_V_read;

wire [16 - 1:0] sig_udpPortReq_txRequestPort_V_V_din;
wire sig_udpPortReq_txRequestPort_V_V_full_n;
wire sig_udpPortReq_txRequestPort_V_V_write;

wire sig_udpPortReq_ap_rst;



udpPortReq udpPortReq_U(
    .rxReplyPort_V_dout(sig_udpPortReq_rxReplyPort_V_dout),
    .rxReplyPort_V_empty_n(sig_udpPortReq_rxReplyPort_V_empty_n),
    .rxReplyPort_V_read(sig_udpPortReq_rxReplyPort_V_read),
    .txRequestPort_V_V_din(sig_udpPortReq_txRequestPort_V_V_din),
    .txRequestPort_V_V_full_n(sig_udpPortReq_txRequestPort_V_V_full_n),
    .txRequestPort_V_V_write(sig_udpPortReq_txRequestPort_V_V_write),
    .ap_rst(sig_udpPortReq_ap_rst),
    .ap_clk(aclk)
);

udpPortReq_rxReplyPort_if udpPortReq_rxReplyPort_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .rxReplyPort_V_dout(sig_udpPortReq_rxReplyPort_V_dout),
    .rxReplyPort_V_empty_n(sig_udpPortReq_rxReplyPort_V_empty_n),
    .rxReplyPort_V_read(sig_udpPortReq_rxReplyPort_V_read),
    .TVALID(rxReplyPort_TVALID),
    .TREADY(rxReplyPort_TREADY),
    .TDATA(rxReplyPort_TDATA));

udpPortReq_txRequestPort_if udpPortReq_txRequestPort_if_U(
    .ACLK(aclk),
    .ARESETN(aresetn),
    .txRequestPort_V_V_din(sig_udpPortReq_txRequestPort_V_V_din),
    .txRequestPort_V_V_full_n(sig_udpPortReq_txRequestPort_V_V_full_n),
    .txRequestPort_V_V_write(sig_udpPortReq_txRequestPort_V_V_write),
    .TVALID(txRequestPort_TVALID),
    .TREADY(txRequestPort_TREADY),
    .TDATA(txRequestPort_TDATA));

udpPortReq_ap_rst_if #(
    .RESET_ACTIVE_LOW(RESET_ACTIVE_LOW))
ap_rst_if_U(
    .dout(sig_udpPortReq_ap_rst),
    .din(aresetn));

endmodule
